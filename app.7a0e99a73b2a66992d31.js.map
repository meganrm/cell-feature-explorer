{"version":3,"sources":["webpack:///./src/state/selection/actions.ts","webpack:///./src/constants/index.ts","webpack:///./src/state/metadata/index.ts","webpack:///./src/state/metadata/constants.ts","webpack:///./src/state/selection/index.ts","webpack:///./src/state/metadata/actions.ts","webpack:///./src/containers/AxisDropDown/index.tsx","webpack:///./src/state/index.ts","webpack:///./src/index.tsx","webpack:///./src/containers/App/index.tsx","webpack:///./src/state/util.ts","webpack:///./src/components/CellViewer/index.tsx","webpack:///./src/components/CellViewer/style.css","webpack:///./src/containers/ColorByMenu/index.tsx","webpack:///./src/state/metadata/logics.ts","webpack:///./src/state/selection/selectors.ts","webpack:///./src/state/selection/constants.ts","webpack:///./src/state/metadata/reducer.ts","webpack:///./src/state/metadata/types.ts","webpack:///./src/state/selection/logics.ts","webpack:///./src/state/selection/reducer.ts","webpack:///./src/components/BarChart/index.tsx","webpack:///./src/components/InteractiveRow/index.tsx","webpack:///./src/components/DownloadDropDownMenu/index.tsx","webpack:///./src/components/DownloadDropDownMenu/style.css","webpack:///./src/components/InteractiveRow/style.css","webpack:///./src/components/ColorBySwitcher/index.tsx","webpack:///./src/components/ColorBySwitcher/style.css","webpack:///./src/components/SliderWithCustomMarks/index.tsx","webpack:///./src/containers/AxisDropDown/style.css","webpack:///./src/containers/ColorByMenu/selectors.ts","webpack:///./src/state/metadata/selectors.ts","webpack:///./src/containers/ColorByMenu/style.css","webpack:///./src/containers/MainPlotContainer/index.tsx","webpack:///./src/components/MainPlot/index.tsx","webpack:///./src/containers/MainPlotContainer/selectors.ts","webpack:///./src/containers/MainPlotContainer/style.css","webpack:///./src/containers/ThumbnailGallery/index.tsx","webpack:///./src/components/GalleryCard/index.tsx","webpack:///./src/components/GalleryCard/style.css","webpack:///./src/containers/ThumbnailGallery/style.css","webpack:///./src/components/AffixedNav/index.tsx","webpack:///./src/containers/App/style.css","webpack:///./src/state/configure-store.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAA0T;AAC1T;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACtFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACQ;AACR;AACQ;AACR;AACQ;AACR;AACQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;AC3DA;AACA;AACA;AACA;AACA;yDACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;ACXuB;AACvB;AACA;AACA;AACA;;;;;;;;;;;;;;;ACJA;AACA;AACA;AACA;AACA;yDACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;ACXkG;AAClG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;ACtBA;AAAA;AACA;AACA,UAAU,gBAAgB,sCAAsC,iBAAiB,EAAE;AACnF,yBAAyB,uDAAuD;AAChF;AACA;AACA,uBAAuB,sBAAsB;AAC7C;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,MAAM,gBAAgB;AACzC;AACA;AACA;AACA;AACA,iBAAiB,sBAAsB;AACvC;AACA;AACA;AACA;AACA,4BAA4B,sBAAsB;AAClD;AACA;AACA;AACA;AACA;AACA;AACmB;AACkD;AAC3C;AACL;AACsC;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oFAA4C,4BAA4B;AACxE,0IAAyC,+DAA+D;AACxG,6FAAqD,6BAA6B;AAClF,aAAa;AACb;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;ACtF8B;AACC;AACO;AACb;AACT;;;;;;;;;;;;;;;;;;;;;;;;ACJhB;AACA;AACA;AACA;AACiB;AACE;AACF;AACjB;AAC2B;AAC3B,+KAAsC,oFAA4B;AAClE;;;;;;;;;;;;;;;;;;;;;;;ACVA;AAAA;AACA;AACA,UAAU,gBAAgB,sCAAsC,iBAAiB,EAAE;AACnF,yBAAyB,uDAAuD;AAChF;AACA;AACA,uBAAuB,sBAAsB;AAC7C;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,MAAM,gBAAgB;AACzC;AACA;AACA;AACA;AACA,iBAAiB,sBAAsB;AACvC;AACA;AACA;AACA;AACA,4BAA4B,sBAAsB;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACkB;AAC4D;AAC9E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,mHAAoE;AAC3F;AACA;AACA,uBAAuB,kBAAkB;AACzC;AACA;AACA;AACA,uIAA6C,8BAA8B;AAC3E;AACA;AACA,yIAA+C,oBAAoB;AACnE;AACA;AACA;AACA,6EAA4C,8BAA8B;AAC1E,oJAAsD,8IAA8I;AACpM,+EAA8C,4BAA4B;AAC1E,iFAAgD,6BAA6B;AAC7E,oJAAgE,oDAAoD;AACpH;AACA;AACA;AACA,yEAAwC,wCAAwC;AAChF,4EAA2C,2BAA2B;AACtE,yIAA+C,eAAe;AAC9D;AACA,qJAAiD,yFAAyF;AAC1I;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;AChGiB;AACjB;AACA;AACA;AACA;AACA;AACA,+BAA+B,sBAAsB;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,sBAAsB;AAChD,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACnCA;AAC0B;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mFAA2C,mKAAyG;AACpJ;AACA;;;;;;;;ACtBA;AACA,kBAAkB,oF;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACDlB;AAAA;AACA;AACA,UAAU,gBAAgB,sCAAsC,iBAAiB,EAAE;AACnF,yBAAyB,uDAAuD;AAChF;AACA;AACA,uBAAuB,sBAAsB;AAC7C;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,MAAM,gBAAgB;AACzC;AACA;AACA;AACA;AACA,iBAAiB,sBAAsB;AACvC;AACA;AACA;AACA;AACA,4BAA4B,sBAAsB;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACmB;AACwI;AAC3J;AACA;AAC4C;AAC5C;AACA;AACA;AACA;AACqH;AACrH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mGAAmD,2BAA2B,EAAE;AAChF;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yJAAkD,uFAAuF;AACzI,wIAAsC,8DAA8D;AACpG,0FAAiD,mJAA8F;AAC/I,+FAAsD,yEAAoB;AAC1E,+FAAsD,gFAA2B;AACjF,+FAAsD,yEAAoB;AAC1E,+JAAwD,qVAAmM;AAC3P;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yJAAkD,+FAA+F;AACjJ;AACA,sJAA+C,8OAA8O;AAC7R;AACA;AACA;AACA;AACA,wIAAsC,+BAA+B;AACrE,4IAA0C,UAAU;AACpD,4IAA0C,UAAU;AACpD,mJAAuD,iFAA4B;AACnF;AACA,qFAA4C,mCAAmC;AAC/E,qJAAmD,kGAAkG;AACrJ,0FAAiD,0BAA0B;AAC3E,sJAA+C,kNAAkN;AACjQ;AACA;AACA;AACA,iJAA+C,8FAA8F;AAC7I,iFAAwC,iEAAiE;AACzG,iFAAwC,6CAA6C;AACrF,iFAAwC,wDAAwD;AAChG;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;AC7MA;AAAA;AACA,4CAA4C,OAAO;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACsB;AAC0G;AAC/F;AACR;AAC0C;AACZ;AACvD;AACA;AACA;AACA;AACA;AACA,uCAAuC,sBAAsB,EAAE;AAC/D;AACA;AACA;AACA,+HAAqE;AACrE;AACA;AACA;AACA;AACA,aAAa,IAAI;AACjB,SAAS;AACT,mCAAmC,8FAA4C,EAAE;AACjF,+BAA+B,yFAAuC,EAAE;AACxE;AACA,gCAAgC;AAChC,SAAS;AACT,+BAA+B,eAAe,EAAE;AAChD,KAAK;AACL;AACA,CAAC;AACD;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA,uCAAuC,sBAAsB,EAAE;AAC/D;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0CAA0C,2BAA2B;AACrE;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA,gCAAgC;AAChC,SAAS;AACT,+BAA+B,eAAe,EAAE;AAChD,KAAK;AACL;AACA,CAAC;AACD;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACjFA;AAAA;AACA,4CAA4C,OAAO;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,MAAM,gBAAgB;AACzC;AACA;AACA;AACA;AACA,iBAAiB,sBAAsB;AACvC;AACA;AACA;AACA;AACA,4BAA4B,sBAAsB;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACyB;AAC6F;AACL;AACxF;AACzB;AACA,qCAA4C,kCAAkC;AAC9E,qCAA4C,kCAAkC;AAC9E,gDAAuD,uCAAuC;AAC9F,0CAAiD,uCAAuC;AACxF,4CAAmD,gCAAgC;AACnF,yCAAgD,sCAAsC;AACtF,8CAAqD,4CAA4C;AACjG,4CAAmD,sCAAsC;AACzF,0CAAiD,0CAA0C;AAC3F,kDAAyD,kDAAkD;AAC3G,sCAA6C,qCAAqC;AAClF,+CAAsD,4CAA4C;AAClG,4CAAmD,yCAAyC;AAC5F,8CAAqD,2CAA2C;AAChG,0CAAiD,uCAAuC;AACxF;AACA;AACA;AACA,8FAA+C;AAC/C;AACA,CAAC;AACD;AACA;AACA,8FAA+C;AAC/C;AACA,CAAC;AACD,4MAA4G,gGAAiD,+BAA+B,EAAE,GAAG,EAAE;AACnM,4MAA4G,gDAAgD,+BAA+B,EAAE,GAAG,EAAE;AAClM;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,gMAAgG;AAChG;AACA,uBAAuB,iCAAiC;AACxD,CAAC,GAAG,EAAE;AACN;AACA;AACA;AACA;AACA;AACA,qGAAsD,yMAAsG,EAAE;AAC9J,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kGAAmD,yMAAsG,EAAE;AAC3J,CAAC;AACD,qKAA0H,gFAAiC,EAAE;AAC7J;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA,CAAC;AACD;AACA,gGAAiD,qBAAqB,EAAE;AACxE,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,CAAC;AACD;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kGAAmD,iDAAiD,EAAE;AACtG;AACA;AACA;AACA;AACA,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACxND;AAAA;AACiH;AAC1F;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB;AACtB;AACA;AACA;AACA;AACA;AACA;AACA,+BAAsC;AACtC;AACA;AACA;;;;;;;;;;;AC3EA;AAAA;AACA,4CAA4C,OAAO;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACsB;AAC6B;AACnD;AACA,oBAAoB;AACpB;AACA;AACA,gCAAgC;AAChC;AACA,oCAAoC,6FAAyC,EAAE;AAC/E,2CAA2C,oBAAoB,UAAU,8BAA8B,GAAG,EAAE;AAC5G,KAAK;AACL;AACA,oCAAoC,mGAA+C,EAAE;AACrF,2CAA2C,oBAAoB,UAAU,+BAA+B,GAAG,EAAE;AAC7G,KAAK;AACL;AACA;;;;;;;;;;;ACzBiI;;;;;;;;;;;;;;ACA3G;AACQ;AACR;AACY;AACJ;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,CAAC;AACD;AACA;AACA;;;;;;;;;;;;;;;;ACzBA;AAAA;AACA,4CAA4C,OAAO;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,MAAM,gBAAgB;AACzC;AACA;AACA;AACA;AACA,iBAAiB,sBAAsB;AACvC;AACA;AACA;AACA;AACA,4BAA4B,sBAAsB;AAClD;AACA;AACA;AACA;AACA;AACqB;AACC;AACuX;AAC7Y;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,2BAA2B;AAC3B,sBAAsB;AACtB;AACA;AACA;AACA,gCAAgC;AAChC;AACA,oCAAoC,wFAAoC,EAAE;AAC1E;AACA;AACA,+BAA+B,iBAAiB;AAChD,SAAS;AACT,KAAK;AACL;AACA,oCAAoC,4FAAwC,EAAE;AAC9E,2CAA2C,oBAAoB,UAAU,oCAAoC,GAAG,EAAE;AAClH,KAAK;AACL;AACA,oCAAoC,yFAAqC,EAAE;AAC3E;AACA;AACA,+BAA+B,UAAU,iCAAiC,qCAAqC,kJAA8F,gCAAgC,yCAAyC;AACtR,SAAS;AACT,KAAK;AACL;AACA,oCAAoC,qGAAiD,EAAE;AACvF,2CAA2C,oBAAoB,UAAU,8HAA+E,qDAAqD,EAAE,sHAAuE,qDAAqD,EAAE,GAAG,GAAG,EAAE;AACrV,KAAK;AACL;AACA,oCAAoC,2FAAuC,EAAE;AAC7E,2CAA2C,oBAAoB,UAAU,2GAA4D,6BAA6B,EAAE,GAAG,GAAG,EAAE;AAC5K,KAAK;AACL;AACA,oCAAoC,yFAAqC,EAAE;AAC3E,2CAA2C,oBAAoB,UAAU,mEAAmE,GAAG,EAAE;AACjJ,KAAK;AACL;AACA,oCAAoC,gGAA4C,EAAE;AAClF,2CAA2C,oBAAoB,UAAU,wDAAwD,GAAG,EAAE;AACtI,KAAK;AACL;AACA,oCAAoC,0GAAsD,EAAE;AAC5F,2CAA2C,oBAAoB,UAAU,gCAAgC,GAAG,EAAE;AAC9G,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT,2CAA2C,oBAAoB,UAAU,4CAA4C,GAAG,EAAE;AAC1H,KAAK;AACL;AACA,oCAAoC,wGAAoD,EAAE;AAC1F,2CAA2C,oBAAoB,UAAU,sCAAsC,GAAG,EAAE;AACpH,KAAK;AACL;AACA,oCAAoC,kGAA8C,EAAE;AACpF;AACA;AACA,+BAA+B,iBAAiB;AAChD,SAAS;AACT,KAAK;AACL;AACA,oCAAoC,oGAAgD,EAAE;AACtF,2CAA2C,oBAAoB,UAAU,+BAA+B,GAAG,EAAE;AAC7G,KAAK;AACL;AACA,oCAAoC,+FAA2C,EAAE;AACjF,2CAA2C,oBAAoB,UAAU,iCAAiC,GAAG,EAAE;AAC/G,KAAK;AACL;AACA;;;;;;;;;;;;;;;;;;;;;ACvHA;AACA;AACA;AACA;AACA;AACA;AACA,+IAAqD,oTAAoT;AACzW,KAAK;AACL;AACA;;;;;;;;;;;;;;;;;ACTA;AAAA;AACA;AACA,UAAU,gBAAgB,sCAAsC,iBAAiB,EAAE;AACnF,yBAAyB,uDAAuD;AAChF;AACA;AACA,uBAAuB,sBAAsB;AAC7C;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oFAA4C,8BAA8B;AAC1E,gFAAwC,gCAAgC;AACxE;AACA,oJAAmD,4EAA4E;AAC/H,6IAA4C;AAC5C;AACA;AACA,qBAAqB,aAAa;AAClC,qFAA6C,0BAA0B;AACvE;AACA,qFAA6C,0BAA0B;AACvE,qJAA2D,6IAA6I;AACxM;AACA,kJAAiD,2EAA2E;AAC5H;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;;;;;;;;;;;;;;;;;;;;;ACzDA;AAAA;AAAA;AACA;AACA,UAAU,gBAAgB,sCAAsC,iBAAiB,EAAE;AACnF,yBAAyB,uDAAuD;AAChF;AACA;AACA,uBAAuB,sBAAsB;AAC7C;AACA;AACA,CAAC;AACD;AACA,4CAA4C,OAAO;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,MAAM,gBAAgB;AACzC;AACA;AACA;AACA;AACA,iBAAiB,sBAAsB;AACvC;AACA;AACA;AACA;AACA,4BAA4B,sBAAsB;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wEAAwE;AACxE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8CAA8C,6BAA6B;AAC3E,aAAa;AACb;AACA;AACA;AACA,8CAA8C,6BAA6B;AAC3E,aAAa;AACb;AACA;AACA;AACA;AACA,uBAAuB,8BAA8B,EAAE;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,6BAA6B;AACxD;AACA;AACA;AACA;AACA;AACA;AACA,iJAA+C,gCAAgC;AAC/E,sJAAoD,6CAA6C;AACjG;AACA,iJAA+C,gBAAgB,iIAA+B,mBAAmB;AACjH,mFAA0C,YAAY;AACtD;AACA;AACA;AACA,SAAS;AACT,qFAA4C,8BAA8B;AAC1E,6IAA2C,oIAAoI;AAC/K,+IAA6C,kFAAkF;AAC/H,iJAA+C,mBAAmB;AAClE;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;;;;;;;;ACvIA;AACA,kBAAkB,uC;;;;;;;ACDlB;AACA,kBAAkB,4J;;;;;;;;;;;;;;;;ACDlB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0JAAyD,8DAA8D;AACvH,mIAAkC,yBAAyB;AAC3D,kFAA0C,0BAA0B;AACpE,0IAAyC,0LAA0L;AACnO,uJAAsD,8DAA8D;AACpH,8EAAsC,0BAA0B;AAChE,sIAAqC,sGAAsG;AAC3I;AACA;;;;;;;;ACjBA;AACA,kBAAkB,uN;;;;;;;;;;;;;;;;ACDlB;AAAA;AAAA;AACA;AACA,UAAU,gBAAgB,sCAAsC,iBAAiB,EAAE;AACnF,yBAAyB,uDAAuD;AAChF;AACA;AACA,uBAAuB,sBAAsB;AAC7C;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,wBAAwB;AACnD;AACA;AACA;AACA;AACA;AACA,oCAAoC,wCAAwC;AAC5E;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,uIAAsC,UAAU;AAChD;AACA,uIAAsC,WAAW;AACjD,8IAA6C,kKAAkK;AAC/M;AACA;AACA,CAAC;AACD;;;;;;;;AC9DA;AACA,kBAAkB,2K;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACDlB;AACA;AACA;AACA;AACA;AACyB;AACoH;AACnF;AACgJ;AACxK;AAClC;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,CAAC;AACD;AACA;AACA;AACA,iGAAkD,+KAAsE,wBAAwB,EAAE,YAAY,EAAE;AAChK,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC7ED;AACA;AACA;AACA;AACA;AACA;AACyB;AACG;AAC5B;AACA,6CAAoD,mCAAmC;AACvF,4CAAmD,oCAAoC;AACvF;AACA;AACA,CAAC;AACD;AACA;AACA,CAAC;AACD;AACA;AACA,CAAC;AACD,uIAA4F,mFAAoC,EAAE;AAClI;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,IAAI;AACT;AACA,CAAC;AACD,iIAAsF,8EAA+B,EAAE;;;;;;;;AChDvH;AACA,kBAAkB,6L;;;;;;;;;;;;;;;;;;;;;;ACDlB;AAAA;AACA;AACA,UAAU,gBAAgB,sCAAsC,iBAAiB,EAAE;AACnF,yBAAyB,uDAAuD;AAChF;AACA;AACA,uBAAuB,sBAAsB;AAC7C;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACmB;AACnB;AACmD;AACnD;AACA;AACA;AACkC;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,uJAAyD,gGAA4C,EAAE;AACvG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6EAA4C,+CAA+C;AAC3F,kIAA+C,wEAAoB;AACnE,kIAA+C,wEAAoB;AACnE,yIAA2C,qIAAqI;AAChL;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACjFA;AAAA;AACA;AACA,UAAU,gBAAgB,sCAAsC,iBAAiB,EAAE;AACnF,yBAAyB,uDAAuD;AAChF;AACA;AACA,uBAAuB,sBAAsB;AAC7C;AACA;AACA,CAAC;AACD;AACA,4CAA4C,OAAO;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACiC;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,oBAAoB,sBAAsB,sCAAsC,GAAG;AAC9G;AACA;AACA;AACA,uBAAuB,4BAA4B;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sIAA2C,2LAA2L;AACtO;AACA;AACA,CAAC;AACD;;;;;;;;;;;;;;;;ACvHA;AAAA;AACA,4CAA4C,OAAO;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACyB;AACqE;AACkB;AAChH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC,uBAAuB,2DAA2D,6HAAyE;AAC7L,oEAAoE,mBAAmB,qGAAiD;AACxI,uDAAuD,yBAAyB,mGAA+C;AAC/H;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA,0BAA0B,iBAAiB;AAC3C;AACA,mCAAmC,MAAM;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA,qBAAqB;AACrB;AACA;AACA,iBAAiB;AACjB,eAAe;AACf;AACA,sBAAsB,iBAAiB,oBAAoB,wBAAwB,wJAAoG,GAAG;AAC1L;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;;;;;;;AC1HD;AACA,kBAAkB,uC;;;;;;;;;;;;;;;;;;;ACDlB;AAAA;AACA;AACA,UAAU,gBAAgB,sCAAsC,iBAAiB,EAAE;AACnF,yBAAyB,uDAAuD;AAChF;AACA;AACA,uBAAuB,sBAAsB;AAC7C;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACkB;AAClB;AACuF;AAC/D;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6EAA4C,gBAAgB;AAC5D,6EAA4C,kCAAkC;AAC9E;AACA,yIAA+C,kBAAkB;AACjE;AACA;AACA,2IAAiD,wEAAwE;AACzH,iIAAuC,QAAQ,gDAAgD,yCAAyC,cAAc,uCAAuC;AAC7L;AACA;AACA;AACA;AACA,4IAA8C,wMAAwM;AACtP;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;AC1DA;AACA;AACA;AACA;AACA;AAC6B;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,wIAAuC;AACvC,iFAAyC,sIAAkF;AAC3H,iFAAyC,oDAAoD;AAC7F,wIAAuC,0EAA0E;AACjH,wIAAuC,qEAAqE;AAC5G,WAAW;AACX,2EAAmC,qBAAqB;AACxD;AACA;;;;;;;;AC/BA;AACA,kBAAkB,uC;;;;;;;ACDlB;AACA,kBAAkB,gG;;;;;;;;;;;;;;ACDlB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2EAAmC;AACnC,4IAA2C,oBAAoB;AAC/D,uGAA+D;AAC/D,2EAAmC;AACnC,4IAA2C,kBAAkB;AAC7D,0GAAkE;AAClE,2EAAmC;AACnC,4IAA2C,eAAe;AAC1D,4GAAoE;AACpE;AACA;;;;;;;;AClBA;AACA,kBAAkB,kJ;;;;;;;;;;;;;;ACDlB;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,MAAM,gBAAgB;AACzC;AACA;AACA;AACA;AACA,iBAAiB,sBAAsB;AACvC;AACA;AACA;AACA;AACA,4BAA4B,sBAAsB;AAClD;AACA;AACA;AACyD;AACzB;AACT;AACwB;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"app.7a0e99a73b2a66992d31.js","sourcesContent":["import { CHANGE_AXIS, CHANGE_CLUSTER_NUMBER, CHANGE_CLUSTERING_ALGORITHM, DESELECT_ALL_POINTS, DESELECT_GROUP_OF_POINTS, DESELECT_POINT, DOWNLOAD_IMAGE_DATA, OPEN_CELL_IN_3D, SELECT_DOWNLOAD_ID, SELECT_GROUP, SELECT_POINT, TOGGLE_APPLY_SELECTION_SET_COLOR, TOGGLE_CLUSTERS_VISIBLE, TOGGLE_FILTER_BY_PROTEIN_NAME, } from \"./constants\";\nexport function changeAxis(axisId, payload) {\n    return {\n        axisId: axisId,\n        payload: payload,\n        type: CHANGE_AXIS,\n    };\n}\nexport function selectGroupOfPoints(key, payload) {\n    return {\n        key: key,\n        payload: payload,\n        type: SELECT_GROUP,\n    };\n}\nexport function deselectGroupOfPoints(payload) {\n    return {\n        payload: payload,\n        type: DESELECT_GROUP_OF_POINTS,\n    };\n}\nexport function deselectPoint(payload) {\n    return {\n        payload: payload,\n        type: DESELECT_POINT,\n    };\n}\nexport function selectPoint(payload) {\n    return {\n        payload: payload,\n        type: SELECT_POINT,\n    };\n}\nexport function clearAllSelectedPoints() {\n    return {\n        type: DESELECT_ALL_POINTS,\n    };\n}\nexport function toggleFilterByProteinName(payload) {\n    return {\n        payload: payload,\n        type: TOGGLE_FILTER_BY_PROTEIN_NAME,\n    };\n}\nexport function selectCellFor3DViewer(payload) {\n    return {\n        payload: payload,\n        type: OPEN_CELL_IN_3D,\n    };\n}\nexport function toggleApplySelectionSetColors(payload) {\n    return {\n        payload: payload,\n        type: TOGGLE_APPLY_SELECTION_SET_COLOR,\n    };\n}\nexport function changeClusteringAlgorithm(payload) {\n    return {\n        payload: payload,\n        type: CHANGE_CLUSTERING_ALGORITHM,\n    };\n}\nexport function changeClusteringNumber(clusteringKey, payload) {\n    return {\n        clusteringKey: clusteringKey,\n        payload: payload,\n        type: CHANGE_CLUSTER_NUMBER,\n    };\n}\nexport function toggleShowClusters(payload) {\n    return {\n        payload: payload,\n        type: TOGGLE_CLUSTERS_VISIBLE,\n    };\n}\nexport function changeDownloadSettings(payload) {\n    return {\n        payload: payload,\n        type: SELECT_DOWNLOAD_ID,\n    };\n}\nexport function downloadImage(payload) {\n    return {\n        payload: payload,\n        type: DOWNLOAD_IMAGE_DATA,\n    };\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/state/selection/actions.ts\n// module id = 112\n// module chunks = 1","export var APP_ID = \"cell-feature-explorer\";\nexport var API_VERSION = \"v1\";\nexport var X_AXIS_ID = \"plotByOnX\";\nexport var Y_AXIS_ID = \"plotByOnY\";\nexport var SCATTER_PLOT_NAME = \"features-scatter-plot\";\nexport var SELECTIONS_PLOT_NAME = \"selections-scatter-plot\";\nexport var CLUSTERS_PLOT_NAME = \"clusters-plot-name\";\nexport var COLOR_BY_SELECTOR = \"colorBy\";\nexport var CELL_ID_KEY = \"CellId\";\nexport var CELL_LINE_NAME_KEY = \"CellLineName\";\nexport var FOV_ID_KEY = \"FOVId\";\nexport var PROTEIN_NAME_KEY = \"structureProteinName\";\nexport var CELL_LINE_DEF_NAME_KEY = \"CellLineId/Name\";\nexport var CELL_LINE_DEF_STRUCTURE_KEY = \"StructureId/Name\";\nexport var CELL_LINE_DEF_PROTEIN_KEY = \"ProteinId/DisplayName\";\nexport var FILE_INFO_KEYS = Object.freeze([CELL_ID_KEY, CELL_LINE_NAME_KEY, FOV_ID_KEY]);\nexport var DOWNLOAD_CONFIG_TYPE_PROTEIN = \"protein\";\nexport var DOWNLOAD_CONFIG_TYPE_SELECTION_SET = \"selectionSet\";\nexport var AGGLOMERATIVE_KEY = \"Agglomerative\";\nexport var KMEANS_KEY = \"KMeans\";\nexport var DBSCAN_KEY = \"DBSCAN\";\nexport var CLUSTER_NUMBER_KEY = \"numberOfClusters\";\nexport var CLUSTER_DISTANCE_KEY = \"clusteringDistance\";\nvar _CELL_VIEWER_URL = CELL_VIEWER_URL;\nexport { _CELL_VIEWER_URL as CELL_VIEWER_URL };\nvar _BASE_API_URL = BASE_API_URL;\nexport { _BASE_API_URL as BASE_API_URL };\nvar _THUMBNAIL_BASE_URL = THUMBNAIL_BASE_URL;\nexport { _THUMBNAIL_BASE_URL as THUMBNAIL_BASE_URL };\nvar _DOWNLOAD_URL_PREFIX = THUMBNAIL_BASE_URL;\nexport { _DOWNLOAD_URL_PREFIX as DOWNLOAD_URL_PREFIX };\nexport var DISABLE_COLOR = \"#6e6e6e\";\nexport var OFF_COLOR = \"#000\";\nexport var GENERAL_PLOT_SETTINGS = {\n    backgroundColor: \"rgba(0,0,0,0)\",\n    cellName: CELL_ID_KEY,\n    chartParent: \"ace-scatter-chart\",\n    circleRadius: 4,\n    histogramColor: \"rgb(164,162,164)\",\n    legend: {\n        font: {\n            color: \"rgb(255,255,255)\",\n        },\n        orientation: \"h\",\n        y: 60,\n    },\n    margin: {\n        bottom: 10,\n        left: 25,\n        right: 25,\n        top: 10,\n    },\n    moveDropdownCutoffWidth: 370,\n    showLegendCutoffHeight: 635,\n    showLegendCutoffWidth: 692,\n    textColor: \"rgb(255,255,255)\",\n    unselectedCircleOpacity: .5,\n    xAxisInitial: \"Nuclear Volume (fL)\",\n    yAxisInitial: \"Cellular Volume (fL)\",\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/constants/index.ts\n// module id = 13\n// module chunks = 1","import * as actions from \"./actions\";\nimport logics from \"./logics\";\nimport reducer from \"./reducer\";\nimport * as selectors from \"./selectors\";\nimport * as types from \"./types\";\nexport default {\n    actions: actions,\n    logics: logics,\n    reducer: reducer,\n    selectors: selectors,\n    types: types,\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/state/metadata/index.ts\n// module id = 168\n// module chunks = 1","import { makeConstant } from \"../util\";\nexport var RECEIVE_METADATA = makeConstant(\"metadata\", \"receive\");\nexport var REQUEST_FEATURE_DATA = makeConstant(\"metadata\", \"request\");\nexport var RECEIVE_CELL_LINE_DATA = makeConstant(\"celllinedata\", \"receive\");\nexport var REQUEST_CELL_LINE_DATA = makeConstant(\"celllinedata\", \"request\");\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/state/metadata/constants.ts\n// module id = 169\n// module chunks = 1","import * as actions from \"./actions\";\nimport logics from \"./logics\";\nimport reducer from \"./reducer\";\nimport * as selectors from \"./selectors\";\nimport * as types from \"./types\";\nexport default {\n    actions: actions,\n    logics: logics,\n    reducer: reducer,\n    selectors: selectors,\n    types: types,\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/state/selection/index.ts\n// module id = 176\n// module chunks = 1","import { RECEIVE_CELL_LINE_DATA, RECEIVE_METADATA, REQUEST_CELL_LINE_DATA, REQUEST_FEATURE_DATA, } from \"./constants\";\nexport function receiveCellLineData(payload) {\n    return {\n        payload: payload,\n        type: RECEIVE_CELL_LINE_DATA,\n    };\n}\nexport function receiveMetadata(payload) {\n    return {\n        payload: payload,\n        type: RECEIVE_METADATA,\n    };\n}\nexport function requestCellLineData() {\n    return {\n        type: REQUEST_CELL_LINE_DATA,\n    };\n}\nexport function requestFeatureData() {\n    return {\n        type: REQUEST_FEATURE_DATA,\n    };\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/state/metadata/actions.ts\n// module id = 261\n// module chunks = 1","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __read = (this && this.__read) || function (o, n) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n    if (!m) return o;\n    var i = m.call(o), r, ar = [], e;\n    try {\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n    }\n    catch (error) { e = { error: error }; }\n    finally {\n        try {\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\n        }\n        finally { if (e) throw e.error; }\n    }\n    return ar;\n};\nvar __spread = (this && this.__spread) || function () {\n    for (var ar = [], i = 0; i < arguments.length; i++) ar = ar.concat(__read(arguments[i]));\n    return ar;\n};\nimport Select from \"antd/es/select\";\nimport \"antd/es/select/style/index.js\";\nimport includes from \"lodash/includes\";\nimport React from \"react\";\nimport { connect, } from \"react-redux\";\nimport { COLOR_BY_SELECTOR, PROTEIN_NAME_KEY, X_AXIS_ID, Y_AXIS_ID, } from \"../../constants\";\nimport { getFeatureNames } from \"../../state/metadata/selectors\";\nimport { changeAxis } from \"../../state/selection/actions\";\nimport { getColorBySelection, getPlotByOnX, getPlotByOnY, } from \"../../state/selection/selectors\";\nvar styles = require(\"./style.css\");\nvar Option = Select.Option;\nvar AxisDropDown = /** @class */ (function (_super) {\n    __extends(AxisDropDown, _super);\n    function AxisDropDown(props) {\n        var _this = _super.call(this, props) || this;\n        _this.handleChange = _this.handleChange.bind(_this);\n        return _this;\n    }\n    AxisDropDown.prototype.handleChange = function (value) {\n        var _a = this.props, axisId = _a.axisId, handleChangeAxis = _a.handleChangeAxis;\n        var axisSettingValue = value;\n        handleChangeAxis(axisId, axisSettingValue);\n    };\n    AxisDropDown.prototype.render = function () {\n        var _a;\n        var _b = this.props, axisId = _b.axisId, colorByValue = _b.colorByValue, xDropDownValue = _b.xDropDownValue, yDropDownValue = _b.yDropDownValue, featureNames = _b.featureNames;\n        var axisIDMap = (_a = {},\n            _a[X_AXIS_ID] = xDropDownValue,\n            _a[Y_AXIS_ID] = yDropDownValue,\n            _a[COLOR_BY_SELECTOR] = colorByValue,\n            _a);\n        var displayOptions;\n        if (axisId === COLOR_BY_SELECTOR && !includes(featureNames, PROTEIN_NAME_KEY)) {\n            displayOptions = __spread([PROTEIN_NAME_KEY], featureNames);\n        }\n        else {\n            displayOptions = featureNames;\n        }\n        return (React.createElement(\"div\", { className: styles[axisId] },\n            React.createElement(Select, { defaultValue: axisIDMap[axisId], onChange: this.handleChange }, displayOptions.map(function (option) {\n                return (React.createElement(Option, { value: option, key: option }, option === PROTEIN_NAME_KEY ? \"Protein\" : option));\n            }))));\n    };\n    return AxisDropDown;\n}(React.Component));\nfunction mapStateToProps(state) {\n    return {\n        colorByValue: getColorBySelection(state),\n        featureNames: getFeatureNames(state),\n        xDropDownValue: getPlotByOnX(state),\n        yDropDownValue: getPlotByOnY(state),\n    };\n}\nvar dispatchToPropsMap = {\n    handleChangeAxis: changeAxis,\n};\nexport default connect(mapStateToProps, dispatchToPropsMap)(AxisDropDown);\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/containers/AxisDropDown/index.tsx\n// module id = 295\n// module chunks = 1","export { default as metadata } from \"./metadata\";\nexport { default as selection } from \"./selection\";\nexport { default as createReduxStore } from \"./configure-store\";\nexport { enableBatching } from \"./util\";\nexport { State } from \"./types\";\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/state/index.ts\n// module id = 310\n// module chunks = 1","import \"core-js/es6/map\";\nimport \"core-js/es6/promise\";\nimport \"core-js/es6/set\";\nimport * as React from \"react\";\nimport { render } from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport { APP_ID } from \"./constants\";\nimport App from \"./containers/App\";\nimport { createReduxStore } from \"./state\";\nrender(React.createElement(Provider, { store: createReduxStore() },\n    React.createElement(App, null)), document.getElementById(APP_ID));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/index.tsx\n// module id = 316\n// module chunks = 1","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __read = (this && this.__read) || function (o, n) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n    if (!m) return o;\n    var i = m.call(o), r, ar = [], e;\n    try {\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n    }\n    catch (error) { e = { error: error }; }\n    finally {\n        try {\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\n        }\n        finally { if (e) throw e.error; }\n    }\n    return ar;\n};\nvar __spread = (this && this.__spread) || function () {\n    for (var ar = [], i = 0; i < arguments.length; i++) ar = ar.concat(__read(arguments[i]));\n    return ar;\n};\nimport Icon from \"antd/es/icon\";\nimport \"antd/es/icon/style/index.js\";\nimport Layout from \"antd/es/layout\";\nimport \"antd/es/layout/style/index.js\";\nimport uniq from \"lodash/uniq\";\nimport * as React from \"react\";\nimport { connect } from \"react-redux\";\nimport { getSelected3DCell, getSelected3DCellCellLine, getSelected3DCellFOV, } from \"../../state/selection/selectors\";\nimport CellViewer from \"../../components/CellViewer/index\";\nimport ColorByMenu from \"../../containers/ColorByMenu\";\nimport MainPlotContainer from \"../MainPlotContainer\";\nimport ThumbnailGallery from \"../ThumbnailGallery\";\nimport AffixedNav from \"../../components/AffixedNav\";\nvar styles = require(\"./style.css\");\nvar Header = Layout.Header, Footer = Layout.Footer, Sider = Layout.Sider, Content = Layout.Content;\nvar App = /** @class */ (function (_super) {\n    __extends(App, _super);\n    function App(props) {\n        var _this = _super.call(this, props) || this;\n        _this.state = {\n            defaultActiveKey: [App.panelKeys[0]],\n            openKeys: [App.panelKeys[0]],\n        };\n        _this.onSelectionToolUsed = _this.onSelectionToolUsed.bind(_this);\n        _this.onPanelClicked = _this.onPanelClicked.bind(_this);\n        return _this;\n    }\n    App.prototype.onSelectionToolUsed = function () {\n        this.setState({ openKeys: uniq(__spread(this.state.openKeys, [App.panelKeys[1]])) });\n    };\n    App.prototype.onPanelClicked = function (value) {\n        this.setState({ openKeys: value });\n    };\n    App.prototype.render = function () {\n        var _a = this.props, selected3DCell = _a.selected3DCell, selected3DCellFOV = _a.selected3DCellFOV, selected3DCellCellLine = _a.selected3DCellCellLine;\n        return (React.createElement(Layout, { className: styles.container },\n            React.createElement(Header, null,\n                React.createElement(\"h3\", null,\n                    React.createElement(Icon, { type: \"dot-chart\" }),\n                    \" Plot\"),\n                React.createElement(AffixedNav, null)),\n            React.createElement(Layout, null,\n                React.createElement(Sider, { className: styles.colorMenu },\n                    React.createElement(ColorByMenu, { panelKeys: App.panelKeys, openKeys: this.state.openKeys, defaultActiveKey: this.state.defaultActiveKey, onPanelClicked: this.onPanelClicked })),\n                React.createElement(Content, { className: styles.content },\n                    React.createElement(\"div\", { className: styles.plotView },\n                        React.createElement(MainPlotContainer, { handleSelectionToolUsed: this.onSelectionToolUsed }))),\n                React.createElement(Sider, null)),\n            React.createElement(Footer, null,\n                React.createElement(ThumbnailGallery, null)),\n            React.createElement(\"div\", { className: styles.cellViewerContainer },\n                React.createElement(\"h3\", { className: styles.header },\n                    React.createElement(Icon, { type: \"sync\" }),\n                    \" 3D Cell Viewer\"),\n                React.createElement(CellViewer, { cellId: selected3DCell, fovId: selected3DCellFOV, cellLineName: selected3DCellCellLine }))));\n    };\n    App.panelKeys = [\"proteinNames\", \"selections\", \"clusters\"];\n    return App;\n}(React.Component));\nfunction mapStateToProps(state) {\n    return {\n        selected3DCell: getSelected3DCell(state),\n        selected3DCellCellLine: getSelected3DCellCellLine(state),\n        selected3DCellFOV: getSelected3DCellFOV(state),\n    };\n}\nexport default connect(mapStateToProps, null)(App);\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/containers/App/index.tsx\n// module id = 383\n// module chunks = 1","import { APP_ID } from \"../constants\";\nexport function makeConstant(associatedReducer, actionType) {\n    return APP_ID + \"/\" + associatedReducer.toUpperCase() + \"/\" + actionType.toUpperCase();\n}\nexport function makeReducer(typeToDescriptionMap, initialState) {\n    return function (state, action) {\n        if (state === void 0) { state = initialState; }\n        var description = typeToDescriptionMap[action.type];\n        if (!description) {\n            return state;\n        }\n        if (description.accepts(action)) {\n            return description.perform(state, action);\n        }\n        return state;\n    };\n}\nvar BATCH_ACTIONS = makeConstant(\"batch\", \"batch-actions\");\nexport function batchActions(actions, type) {\n    if (type === void 0) { type = BATCH_ACTIONS; }\n    return { type: type, batch: true, payload: actions };\n}\nfunction actionIsBatched(action) {\n    return action && action.batch && Array.isArray(action.payload);\n}\nexport function enableBatching(reducer) {\n    return function batchingReducer(state, action) {\n        if (actionIsBatched(action)) {\n            return action.payload.reduce(batchingReducer, state);\n        }\n        return reducer(state, action);\n    };\n}\nexport function convertFileInfoToAICSId(datum) {\n    return datum.CellLineName + \"_\" + datum.FOVId + \"_\" + datum.CellId;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/state/util.ts\n// module id = 43\n// module chunks = 1","import React from \"react\";\nimport { CELL_VIEWER_URL } from \"../../constants/index\";\nvar styles = require(\"./style.css\");\nvar CellViewer = function (_a) {\n    var cellId = _a.cellId, cellLineName = _a.cellLineName, fovId = _a.fovId;\n    if (!cellId) {\n        return null;\n    }\n    var query = \"\";\n    if (!fovId) {\n        // Assume cellId has the form:\n        // ?legacyName_1_2=2017_03_08_Struct_First_Pass_Seg/AICS-10/AICS-10_5_5\n        // After release, actual legacy links will look like : ?legacyName_1_2=AICS-10_5_5\n        // TODO this needs to be updated before release, when we flatten the directory\n        // structure of the bucket containing legacy version 1.2 images\n        query = \"legacyName_1_2=\" + cellId;\n    }\n    else {\n        query = \"fovId=\" + fovId + \"&cellId=\" + cellId + \"&cellLine=\" + cellLineName;\n    }\n    return (React.createElement(\"iframe\", { id: \"three-d-viewer\", frameBorder: 0, className: styles.cellViewer, src: CELL_VIEWER_URL + \"?\" + query }));\n};\nexport default CellViewer;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/CellViewer/index.tsx\n// module id = 524\n// module chunks = 1","// removed by extract-text-webpack-plugin\nmodule.exports = {\"cell-viewer\":\"style__cell-viewer--2yy3F\",\"cellViewer\":\"style__cell-viewer--2yy3F\"};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/CellViewer/style.css\n// module id = 525\n// module chunks = 1","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __read = (this && this.__read) || function (o, n) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n    if (!m) return o;\n    var i = m.call(o), r, ar = [], e;\n    try {\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n    }\n    catch (error) { e = { error: error }; }\n    finally {\n        try {\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\n        }\n        finally { if (e) throw e.error; }\n    }\n    return ar;\n};\nvar __spread = (this && this.__spread) || function () {\n    for (var ar = [], i = 0; i < arguments.length; i++) ar = ar.concat(__read(arguments[i]));\n    return ar;\n};\nimport Checkbox from \"antd/es/checkbox\";\nimport \"antd/es/checkbox/style/index.js\";\nimport Col from \"antd/es/col\";\nimport \"antd/es/col/style/index.js\";\nimport Collapse from \"antd/es/collapse\";\nimport \"antd/es/collapse/style/index.js\";\nimport Radio from \"antd/es/radio\";\nimport \"antd/es/radio/style/index.js\";\nimport Row from \"antd/es/row\";\nimport \"antd/es/row/style/index.js\";\nimport filter from \"lodash/filter\";\nimport includes from \"lodash/includes\";\nimport indexOf from \"lodash/indexOf\";\nimport React from \"react\";\nimport { connect, } from \"react-redux\";\nimport { AGGLOMERATIVE_KEY, COLOR_BY_SELECTOR, DBSCAN_KEY, DOWNLOAD_CONFIG_TYPE_PROTEIN, DOWNLOAD_CONFIG_TYPE_SELECTION_SET, KMEANS_KEY, PROTEIN_NAME_KEY } from \"../../constants\";\nimport metadataStateBranch from \"../../state/metadata\";\nimport selectionStateBranch from \"../../state/selection\";\nimport { CLUSTERING_LABEL, CLUSTERING_MAP, } from \"../../state/selection/constants\";\nimport BarChart from \"../../components/BarChart\";\nimport ColorBySwitcher from \"../../components/ColorBySwitcher\";\nimport SliderWithCustomMarks from \"../../components/SliderWithCustomMarks\";\nimport AxisDropDown from \"../AxisDropDown\";\nimport { createUrlFromListOfIds, getCheckAllCheckboxIsIntermediate, getInteractivePanelData, getSelectionPanelData, } from \"./selectors\";\nvar styles = require(\"./style.css\");\nvar RadioButton = Radio.Button;\nvar RadioGroup = Radio.Group;\nvar initIndex = 2;\nvar Panel = Collapse.Panel;\nvar ColorByMenu = /** @class */ (function (_super) {\n    __extends(ColorByMenu, _super);\n    // submenu keys of first level\n    function ColorByMenu(props) {\n        var _this = _super.call(this, props) || this;\n        _this.onBarClicked = _this.onBarClicked.bind(_this);\n        _this.onColorBySwitchChanged = _this.onColorBySwitchChanged.bind(_this);\n        _this.onActivePanelChange = _this.onActivePanelChange.bind(_this);\n        _this.changeClusteringAlgorithm = _this.changeClusteringAlgorithm.bind(_this);\n        _this.changeClusteringNumber = _this.changeClusteringNumber.bind(_this);\n        _this.renderProteinPanel = _this.renderProteinPanel.bind(_this);\n        _this.renderSelectionPanel = _this.renderSelectionPanel.bind(_this);\n        _this.renderClusteringPanel = _this.renderClusteringPanel.bind(_this);\n        _this.allOnOff = _this.allOnOff.bind(_this);\n        _this.onProteinDownloadButtonClicked = _this.onProteinDownloadButtonClicked.bind(_this);\n        _this.onSelectionSetDownloadButtonClicked = _this.onSelectionSetDownloadButtonClicked.bind(_this);\n        return _this;\n    }\n    ColorByMenu.prototype.componentDidUpdate = function () {\n        var _a = this.props, clusteringAlgorithm = _a.clusteringAlgorithm, handleChangeClusteringNumber = _a.handleChangeClusteringNumber, clusteringSetting = _a.clusteringSetting, clusteringOptions = _a.clusteringOptions;\n        if (!clusteringSetting) {\n            handleChangeClusteringNumber(CLUSTERING_MAP(clusteringAlgorithm), clusteringOptions[initIndex]);\n        }\n    };\n    ColorByMenu.prototype.onBarClicked = function (_a) {\n        var target = _a.target;\n        var _b = this.props, handleFilterByProteinName = _b.handleFilterByProteinName, filtersToExclude = _b.filtersToExclude;\n        var newFilterList = includes(filtersToExclude, target.value) ?\n            filter(filtersToExclude, function (e) { return e !== target.value; }) : __spread(filtersToExclude, [target.value]);\n        handleFilterByProteinName(newFilterList);\n    };\n    ColorByMenu.prototype.onProteinDownloadButtonClicked = function (proteinName) {\n        var handleChangeDownloadSettings = this.props.handleChangeDownloadSettings;\n        handleChangeDownloadSettings({\n            key: proteinName,\n            type: DOWNLOAD_CONFIG_TYPE_PROTEIN,\n        });\n    };\n    ColorByMenu.prototype.onSelectionSetDownloadButtonClicked = function (selectionSetId) {\n        var handleChangeDownloadSettings = this.props.handleChangeDownloadSettings;\n        handleChangeDownloadSettings({\n            key: selectionSetId,\n            type: DOWNLOAD_CONFIG_TYPE_SELECTION_SET,\n        });\n    };\n    ColorByMenu.prototype.allOnOff = function (_a) {\n        var target = _a.target;\n        var _b = this.props, handleFilterByProteinName = _b.handleFilterByProteinName, proteinNames = _b.proteinNames;\n        if (target.checked) {\n            return handleFilterByProteinName([]);\n        }\n        handleFilterByProteinName(proteinNames);\n    };\n    ColorByMenu.prototype.onColorBySwitchChanged = function (colorByProtein) {\n        var handleChangeAxis = this.props.handleChangeAxis;\n        if (colorByProtein) {\n            return handleChangeAxis(COLOR_BY_SELECTOR, PROTEIN_NAME_KEY);\n        }\n        handleChangeAxis(COLOR_BY_SELECTOR, \"Nuclear Volume (fL)\");\n    };\n    ColorByMenu.prototype.onActivePanelChange = function (value) {\n        var onPanelClicked = this.props.onPanelClicked;\n        onPanelClicked(value);\n    };\n    ColorByMenu.prototype.changeClusteringAlgorithm = function (_a) {\n        var target = _a.target;\n        var handleChangeClusteringAlgorithm = this.props.handleChangeClusteringAlgorithm;\n        handleChangeClusteringAlgorithm(target.value);\n    };\n    ColorByMenu.prototype.changeClusteringNumber = function (value) {\n        var _a = this.props, handleChangeClusteringNumber = _a.handleChangeClusteringNumber, clusteringAlgorithm = _a.clusteringAlgorithm;\n        handleChangeClusteringNumber(CLUSTERING_MAP(clusteringAlgorithm), value);\n    };\n    ColorByMenu.prototype.renderClusteringPanel = function () {\n        var _a = this.props, clusteringAlgorithm = _a.clusteringAlgorithm, clusteringSetting = _a.clusteringSetting, handleClusteringToggle = _a.handleClusteringToggle, clusteringOptions = _a.clusteringOptions, showClusters = _a.showClusters;\n        var initSliderSetting = indexOf(clusteringOptions, clusteringSetting) || initIndex;\n        return (React.createElement(React.Fragment, null,\n            React.createElement(ColorBySwitcher, { defaultChecked: false, handleChange: handleClusteringToggle, label: \"Show clusters:\" }),\n            React.createElement(Row, { className: styles.colorByRow, type: \"flex\", align: \"middle\" },\n                React.createElement(RadioGroup, { onChange: this.changeClusteringAlgorithm, defaultValue: KMEANS_KEY, disabled: !showClusters },\n                    React.createElement(RadioButton, { value: KMEANS_KEY }, \"KMeans\"),\n                    React.createElement(RadioButton, { value: AGGLOMERATIVE_KEY }, \"Agglomerative\"),\n                    React.createElement(RadioButton, { value: DBSCAN_KEY }, \"DBSCAN\"))),\n            React.createElement(SliderWithCustomMarks, { disabled: !showClusters, label: CLUSTERING_LABEL[CLUSTERING_MAP(clusteringAlgorithm)], onValueChange: this.changeClusteringNumber, valueOptions: clusteringOptions, initIndex: initSliderSetting })));\n    };\n    ColorByMenu.prototype.renderSelectionPanel = function () {\n        var _a = this.props, downloadUrls = _a.downloadUrls, downloadConfig = _a.downloadConfig, handleApplyColorSwitchChange = _a.handleApplyColorSwitchChange, selectionSetsPanelData = _a.selectionSetsPanelData, handleCloseSelectionSet = _a.handleCloseSelectionSet;\n        return selectionSetsPanelData.length === 0 ?\n            (React.createElement(\"span\", null,\n                \"No selected sets yet. Make a selection on the plot using the\",\n                React.createElement(\"strong\", null, \" Lasso Select\"),\n                \" or\",\n                React.createElement(\"strong\", null, \" Box Select\"),\n                \" tools on the plot, and it will get saved here.\")) : (React.createElement(React.Fragment, null,\n            React.createElement(ColorBySwitcher, { defaultChecked: true, handleChange: handleApplyColorSwitchChange, label: \"Show selections: \" }),\n            React.createElement(\"div\", null,\n                React.createElement(BarChart, { closeable: true, hideable: false, handleCloseSelectionSet: handleCloseSelectionSet, panelData: selectionSetsPanelData, downloadUrls: downloadUrls, downloadConfig: downloadConfig, handleDownload: this.onSelectionSetDownloadButtonClicked }))));\n    };\n    ColorByMenu.prototype.renderProteinPanel = function () {\n        var _a = this.props, filtersToExclude = _a.filtersToExclude, someProteinsOff = _a.someProteinsOff, proteinPanelData = _a.proteinPanelData, downloadUrls = _a.downloadUrls, downloadConfig = _a.downloadConfig;\n        return (React.createElement(React.Fragment, null,\n            React.createElement(Row, { className: styles.colorByRow },\n                React.createElement(Col, { span: 6 }, \"Color by:\"),\n                React.createElement(Col, { span: 6 },\n                    React.createElement(AxisDropDown, { axisId: COLOR_BY_SELECTOR }))),\n            React.createElement(\"div\", null,\n                React.createElement(\"div\", { className: styles.barChartHeader },\n                    React.createElement(Checkbox, { indeterminate: someProteinsOff, checked: filtersToExclude.length === 0, onChange: this.allOnOff }, \"Show/Hide all\"),\n                    React.createElement(\"span\", { className: styles.label }, \"# of cells\")),\n                React.createElement(BarChart, { closeable: false, panelData: proteinPanelData, downloadUrls: downloadUrls, downloadConfig: downloadConfig, hideable: true, onBarClicked: this.onBarClicked, handleDownload: this.onProteinDownloadButtonClicked }))));\n    };\n    ColorByMenu.prototype.render = function () {\n        var _a = this.props, defaultActiveKey = _a.defaultActiveKey, openKeys = _a.openKeys, panelKeys = _a.panelKeys;\n        return (React.createElement(Collapse, { defaultActiveKey: defaultActiveKey, activeKey: openKeys, onChange: this.onActivePanelChange },\n            React.createElement(Panel, { key: panelKeys[0], header: \"Data grouped by tagged structures\" }, this.renderProteinPanel()),\n            React.createElement(Panel, { key: panelKeys[1], header: \"Selected sets\" }, this.renderSelectionPanel()),\n            React.createElement(Panel, { key: panelKeys[2], header: \"Data group by clustering\" }, this.renderClusteringPanel())));\n    };\n    return ColorByMenu;\n}(React.Component));\nfunction mapStateToProps(state) {\n    return {\n        clusteringAlgorithm: selectionStateBranch.selectors.getClusteringAlgorithm(state),\n        clusteringOptions: selectionStateBranch.selectors.getClusteringRange(state),\n        clusteringSetting: selectionStateBranch.selectors.getClusteringSetting(state),\n        colorBy: selectionStateBranch.selectors.getColorBySelection(state),\n        downloadConfig: selectionStateBranch.selectors.getDownloadConfig(state),\n        downloadUrls: createUrlFromListOfIds(state),\n        filtersToExclude: selectionStateBranch.selectors.getFiltersToExclude(state),\n        proteinNames: metadataStateBranch.selectors.getProteinNames(state),\n        proteinPanelData: getInteractivePanelData(state),\n        selectionSetsPanelData: getSelectionPanelData(state),\n        showClusters: selectionStateBranch.selectors.getClustersOn(state),\n        someProteinsOff: getCheckAllCheckboxIsIntermediate(state),\n    };\n}\nvar dispatchToPropsMap = {\n    handleApplyColorSwitchChange: selectionStateBranch.actions.toggleApplySelectionSetColors,\n    handleChangeAxis: selectionStateBranch.actions.changeAxis,\n    handleChangeClusteringAlgorithm: selectionStateBranch.actions.changeClusteringAlgorithm,\n    handleChangeClusteringNumber: selectionStateBranch.actions.changeClusteringNumber,\n    handleChangeDownloadSettings: selectionStateBranch.actions.changeDownloadSettings,\n    handleCloseSelectionSet: selectionStateBranch.actions.deselectGroupOfPoints,\n    handleClusteringToggle: selectionStateBranch.actions.toggleShowClusters,\n    handleFilterByProteinName: selectionStateBranch.actions.toggleFilterByProteinName,\n};\nexport default connect(mapStateToProps, dispatchToPropsMap)(ColorByMenu);\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/containers/ColorByMenu/index.tsx\n// module id = 527\n// module chunks = 1","var __assign = (this && this.__assign) || Object.assign || function(t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n        s = arguments[i];\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n            t[p] = s[p];\n    }\n    return t;\n};\nimport keys from \"lodash/keys\";\nimport map from \"lodash/map\";\nimport reduce from \"lodash/reduce\";\nimport shuffle from \"lodash/shuffle\";\nimport { createLogic } from \"redux-logic\";\nimport { CELL_LINE_DEF_NAME_KEY, CELL_LINE_DEF_PROTEIN_KEY, CELL_LINE_DEF_STRUCTURE_KEY, CELL_LINE_NAME_KEY, PROTEIN_NAME_KEY, } from \"../../constants/index\";\nimport { changeClusteringNumber } from \"../selection/actions\";\nimport { CLUSTERING_MAP } from \"../selection/constants\";\nimport { receiveCellLineData, receiveMetadata, requestFeatureData } from \"./actions\";\nimport { REQUEST_CELL_LINE_DATA, REQUEST_FEATURE_DATA } from \"./constants\";\nvar requestCellLineData = createLogic({\n    process: function (deps, dispatch, done) {\n        var baseApiUrl = deps.baseApiUrl, httpClient = deps.httpClient;\n        return httpClient\n            .get(baseApiUrl + \"/cell-line-def.json\")\n            .then(function (metadata) { return metadata.data; })\n            .then(function (data) {\n            return reduce(data, function (accumulator, datum) {\n                var _a;\n                accumulator[datum[CELL_LINE_DEF_NAME_KEY]] = (_a = {},\n                    _a[CELL_LINE_DEF_STRUCTURE_KEY] = datum[CELL_LINE_DEF_STRUCTURE_KEY],\n                    _a[CELL_LINE_DEF_PROTEIN_KEY] = datum[CELL_LINE_DEF_PROTEIN_KEY],\n                    _a);\n                return accumulator;\n            }, {});\n        })\n            .then(function (data) { return dispatch(receiveCellLineData(data)); })\n            .then(function () { return dispatch(requestFeatureData()); })\n            .catch(function (reason) {\n            console.log(reason); // tslint:disable-line:no-console\n        })\n            .then(function () { return done(); });\n    },\n    type: REQUEST_CELL_LINE_DATA,\n});\nvar requestFeatureDataLogic = createLogic({\n    // processOptions: {\n    //     successType: receiveMetadata,\n    // },\n    process: function (deps, dispatch, done) {\n        var baseApiUrl = deps.baseApiUrl, getState = deps.getState, httpClient = deps.httpClient;\n        return httpClient\n            .get(baseApiUrl + \"/cell-feature-analysis.json\")\n            .then(function (metadata) { return metadata.data; })\n            .then(function (data) {\n            var cellLineDefs = getState().metadata.cellLineDefs;\n            // shuffle to keep the plot from being organized in z\n            return shuffle(map(data, function (datum) {\n                var _a;\n                return {\n                    clusters: datum.clusters,\n                    file_info: __assign({}, datum.file_info, (_a = {}, _a[PROTEIN_NAME_KEY] = cellLineDefs[datum.file_info[CELL_LINE_NAME_KEY]][CELL_LINE_DEF_PROTEIN_KEY], _a)),\n                    measured_features: datum.measured_features,\n                };\n            }));\n        })\n            .then(function (metaData) {\n            dispatch((receiveMetadata(metaData)));\n            map(metaData[0].clusters, function (value, clusteringName) {\n                var initVal = keys(value)[Math.floor(keys(value).length / 2)];\n                dispatch(changeClusteringNumber(CLUSTERING_MAP(clusteringName), initVal));\n            });\n        })\n            .catch(function (reason) {\n            console.log(reason); // tslint:disable-line:no-console\n        })\n            .then(function () { return done(); });\n    },\n    type: REQUEST_FEATURE_DATA,\n});\nexport default [\n    requestCellLineData,\n    requestFeatureDataLogic,\n];\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/state/metadata/logics.ts\n// module id = 562\n// module chunks = 1","var __assign = (this && this.__assign) || Object.assign || function(t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n        s = arguments[i];\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n            t[p] = s[p];\n    }\n    return t;\n};\nvar __read = (this && this.__read) || function (o, n) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n    if (!m) return o;\n    var i = m.call(o), r, ar = [], e;\n    try {\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n    }\n    catch (error) { e = { error: error }; }\n    finally {\n        try {\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\n        }\n        finally { if (e) throw e.error; }\n    }\n    return ar;\n};\nvar __spread = (this && this.__spread) || function () {\n    for (var ar = [], i = 0; i < arguments.length; i++) ar = ar.concat(__read(arguments[i]));\n    return ar;\n};\nimport find from \"lodash/find\";\nimport includes from \"lodash/includes\";\nimport keys from \"lodash/keys\";\nimport map from \"lodash/map\";\nimport mapValues from \"lodash/mapValues\";\nimport reduce from \"lodash/reduce\";\nimport { createSelector } from \"reselect\";\nimport { CELL_ID_KEY, CELL_LINE_NAME_KEY, CLUSTER_DISTANCE_KEY, FOV_ID_KEY, GENERAL_PLOT_SETTINGS, PROTEIN_NAME_KEY, } from \"../../constants\";\nimport { getClusterData, getFileInfo, getFullMetaDataArray, getMeasuredData, getProteinLabels, getProteinNames, } from \"../metadata/selectors\";\nimport { CLUSTERING_MAP } from \"./constants\";\n// BASIC SELECTORS\nexport var getPlotByOnX = function (state) { return state.selection.plotByOnX; };\nexport var getPlotByOnY = function (state) { return state.selection.plotByOnY; };\nexport var getClickedScatterPoints = function (state) { return state.selection.selectedPoints; };\nexport var getSelectedGroups = function (state) { return state.selection.selectedGroups; };\nexport var getColorBySelection = function (state) { return state.selection.colorBy; };\nexport var getProteinColors = function (state) { return state.selection.proteinColors; };\nexport var getSelectionSetColors = function (state) { return state.selection.selectedGroupColors; };\nexport var getFiltersToExclude = function (state) { return state.selection.filterExclude; };\nexport var getSelected3DCell = function (state) { return state.selection.cellSelectedFor3D; };\nexport var getApplyColorToSelections = function (state) { return state.selection.applySelectionSetColoring; };\nexport var getClustersOn = function (state) { return state.selection.showClusters; };\nexport var getClusteringAlgorithm = function (state) { return state.selection.clusteringAlgorithm; };\nexport var getNumberOfClusters = function (state) { return state.selection.numberOfClusters; };\nexport var getClusteringDistance = function (state) { return state.selection.clusteringDistance; };\nexport var getDownloadConfig = function (state) { return state.selection.downloadConfig; };\n// COMPOSED SELECTORS\nexport var getSelected3DCellFOV = createSelector([getSelected3DCell, getFileInfo], function (selected3DCellId, fileInfoArray) {\n    var _a;\n    var fileInfo = find(fileInfoArray, (_a = {}, _a[CELL_ID_KEY] = selected3DCellId, _a));\n    return fileInfo ? fileInfo[FOV_ID_KEY] : \"\";\n});\nexport var getSelected3DCellCellLine = createSelector([getSelected3DCell, getFileInfo], function (selected3DCellId, fileInfoArray) {\n    var _a;\n    var fileInfo = find(fileInfoArray, (_a = {}, _a[CELL_ID_KEY] = selected3DCellId, _a));\n    return fileInfo ? fileInfo[CELL_LINE_NAME_KEY] : \"\";\n});\nexport var getXValues = createSelector([getMeasuredData, getPlotByOnX], function (measuredData, plotByOnX) { return (map(measuredData, function (metaDatum) { return (metaDatum[plotByOnX]); })); });\nexport var getYValues = createSelector([getMeasuredData, getPlotByOnY], function (measuredData, plotByOnY) { return (measuredData.map(function (metaDatum) { return (metaDatum[plotByOnY]); })); });\nexport var getSelectedGroupsData = createSelector([\n    getMeasuredData,\n    getSelectedGroups,\n    getPlotByOnX,\n    getPlotByOnY,\n    getSelectionSetColors,\n], function (measuredDataArray, selectedGroups, plotByOnX, plotByOnY, selectedGroupColorMapping) {\n    var dataArray = mapValues(selectedGroups, function (value, key) {\n        // for each point index, get x, y, and color for the point.\n        return map(value, function (pointIndex) {\n            var measuredFeatures = measuredDataArray[pointIndex];\n            return {\n                groupColor: selectedGroupColorMapping[key],\n                x: measuredFeatures[plotByOnX],\n                y: measuredFeatures[plotByOnY],\n            };\n        });\n    });\n    // flatten into array\n    var flattened = reduce(dataArray, function (accum, value) {\n        return __spread(accum, value);\n    }, []);\n    return {\n        color: map(flattened, \"groupColor\"),\n        x: map(flattened, \"x\"),\n        y: map(flattened, \"y\"),\n    };\n});\nexport var getPossibleColorByData = createSelector([getFullMetaDataArray], function (metaData) { return (map(metaData, function (ele) {\n    var _a;\n    return (__assign({}, ele.measured_features, (_a = {}, _a[PROTEIN_NAME_KEY] = ele.file_info[PROTEIN_NAME_KEY], _a)));\n})); });\nexport var getFilteredOpacity = createSelector([\n    getColorBySelection,\n    getFiltersToExclude,\n    getProteinLabels,\n], function (colorBySelection, filtersToExclude, proteinLabels) {\n    return map(proteinLabels, function (proteinName) { return (includes(filtersToExclude, proteinName) ? 0 : GENERAL_PLOT_SETTINGS.unselectedCircleOpacity); });\n});\nexport var getOpacity = createSelector([\n    getColorBySelection,\n    getFiltersToExclude,\n    getProteinNames,\n    getProteinLabels,\n], function (colorBySelection, filtersToExclude, proteinNameArray, proteinLabels) {\n    var arrayToMap;\n    if (colorBySelection === PROTEIN_NAME_KEY) {\n        arrayToMap = proteinNameArray;\n    }\n    else {\n        arrayToMap = proteinLabels;\n    }\n    return map(arrayToMap, function (proteinName) { return (includes(filtersToExclude, proteinName) ? 0 : GENERAL_PLOT_SETTINGS.unselectedCircleOpacity); });\n});\nexport var getColorByValues = createSelector([getPossibleColorByData, getColorBySelection], function (metaData, colorBy) { return (map(metaData, colorBy)); });\nexport var getMainPlotData = createSelector([\n    getXValues,\n    getYValues,\n    getColorByValues,\n    getOpacity,\n    getColorBySelection,\n    getProteinColors,\n    getProteinNames,\n], function (xValues, yValues, colorByValues, opacity, colorBy, proteinColors, proteinNames) {\n    return {\n        color: colorBy === PROTEIN_NAME_KEY ? null : colorByValues,\n        groupBy: colorBy === PROTEIN_NAME_KEY,\n        groupSettings: colorBy === PROTEIN_NAME_KEY ? map(proteinNames, function (name, index) {\n            return {\n                color: proteinColors[index],\n                name: name,\n                opacity: opacity[index],\n            };\n        }) : null,\n        groups: colorByValues,\n        opacity: opacity,\n        x: xValues,\n        y: yValues,\n    };\n});\nexport var getSelectedGroupKeys = createSelector([getSelectedGroups], function (selectedGroups) {\n    return keys(selectedGroups);\n});\nexport var getSelectedSetTotals = createSelector([getSelectedGroups], function (selectedGroups) {\n    return map(selectedGroups, function (group) { return group.length; });\n});\nexport var getThumbnails = createSelector([\n    getFileInfo,\n    getClickedScatterPoints,\n], function (fileInfo, clickedScatterPointIndices) {\n    return clickedScatterPointIndices.map(function (pointIndex) {\n        var cellID = fileInfo[pointIndex][CELL_ID_KEY];\n        var cellLineId = fileInfo[pointIndex][CELL_LINE_NAME_KEY];\n        var fovId = fileInfo[pointIndex][FOV_ID_KEY];\n        var src = \"/\" + cellLineId + \"/\" + cellLineId + \"_\" + fovId + \"_\" + cellID + \".png\";\n        return {\n            cellID: cellID,\n            pointIndex: pointIndex,\n            src: src,\n        };\n    });\n});\nexport var getAnnotations = createSelector([\n    getMeasuredData,\n    getFileInfo,\n    getClickedScatterPoints,\n    getPlotByOnX,\n    getPlotByOnY,\n], function (measuredData, fileInfo, clickedScatterPointIndices, xaxis, yaxis) {\n    return clickedScatterPointIndices.map(function (pointIndex) {\n        var cellID = fileInfo[pointIndex][CELL_ID_KEY];\n        var fovID = fileInfo[pointIndex][FOV_ID_KEY];\n        var cellLine = fileInfo[pointIndex][CELL_LINE_NAME_KEY];\n        var x = measuredData[pointIndex][xaxis];\n        var y = measuredData[pointIndex][yaxis];\n        return {\n            cellID: cellID,\n            cellLine: cellLine,\n            fovID: fovID,\n            pointIndex: pointIndex,\n            x: x,\n            y: y,\n        };\n    });\n});\nexport var getClusteringRange = createSelector([getClusterData, getClusteringAlgorithm], function (clusterData, clusteringAlgorithm) {\n    if (clusterData[0]) {\n        return keys(clusterData[0][clusteringAlgorithm]);\n    }\n    return [];\n});\nexport var getClusteringSetting = createSelector([getClusteringAlgorithm, getClusteringDistance, getNumberOfClusters], function (clusteringAlgorithm, distance, numberOfClusters) {\n    var clusteringType = CLUSTERING_MAP(clusteringAlgorithm);\n    return clusteringType === CLUSTER_DISTANCE_KEY ? distance : numberOfClusters;\n});\nexport var getClusteringResult = createSelector([\n    getClusterData,\n    getClusteringAlgorithm,\n    getClusteringSetting,\n    getXValues,\n    getYValues,\n    getFilteredOpacity,\n], function (clusteringData, clusteringAlgorithm, clusterSetting, xValues, yValues, opacity) {\n    return {\n        color: map(clusteringData, function (ele) { return ele[clusteringAlgorithm][clusterSetting]; }),\n        opacity: opacity,\n        x: xValues,\n        y: yValues,\n    };\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/state/selection/selectors.ts\n// module id = 59\n// module chunks = 1","var _a;\nimport { AGGLOMERATIVE_KEY, CLUSTER_DISTANCE_KEY, CLUSTER_NUMBER_KEY, DBSCAN_KEY, KMEANS_KEY, PROTEIN_NAME_KEY, } from \"../../constants/index\";\nimport { makeConstant } from \"../util\";\nexport var CHANGE_AXIS = makeConstant(\"selection\", \"deselect-file\");\nexport var SELECT_GROUP = makeConstant(\"selection\", \"select_group\");\nexport var DESELECT_POINT = makeConstant(\"selection\", \"deselect-point\");\nexport var SELECT_POINT = makeConstant(\"selection\", \"select-point\");\nexport var DESELECT_ALL_POINTS = makeConstant(\"selection\", \"deselect-all-points\");\nexport var TOGGLE_FILTER_BY_PROTEIN_NAME = makeConstant(\"selection\", \"toggle-filter-by-protein-name\");\nexport var OPEN_CELL_IN_3D = makeConstant(\"selection\", \"open-cell-in-3d\");\nexport var TOGGLE_APPLY_SELECTION_SET_COLOR = makeConstant(\"selection\", \"apply-selection-set-color\");\nexport var DESELECT_GROUP_OF_POINTS = makeConstant(\"selection\", \"deselect-group\");\nexport var CHANGE_CLUSTER_NUMBER = makeConstant(\"selection\", \"change-cluster-number\");\nexport var CHANGE_CLUSTERING_ALGORITHM = makeConstant(\"selection\", \"change-clustering-algorithm\");\nexport var TOGGLE_CLUSTERS_VISIBLE = makeConstant(\"selection\", \"toggle-clusters-on\");\nexport var SELECT_DOWNLOAD_ID = makeConstant(\"selection\", \"select-download-id\");\nexport var DOWNLOAD_IMAGE_DATA = makeConstant(\"selection\", \"download-image\");\nexport var INITIAL_COLOR_BY = PROTEIN_NAME_KEY;\nexport var INITIAL_PLOT_BY_ON_X = \"Nuclear Volume (fL)\";\nexport var INITIAL_PLOT_BY_ON_Y = \"Cellular Volume (fL)\";\nexport var INITIAL_COLORS = [\n    \"#a6cee3\",\n    \"#1f78b4\",\n    \"#b2df8a\",\n    \"#33a02c\",\n    \"#fb9a99\",\n    \"#e31a1c\",\n    \"#fdbf6f\",\n    \"#ff7f00\",\n    \"#cab2d6\",\n    \"#6a3d9a\",\n    \"#ffff99\",\n    \"#ff00de\",\n    \"#24bcfa\",\n    \"#84df11\",\n    \"#ecc560\",\n    \"#ff72ff\",\n    \"#f58117\",\n    \"#f8311b\",\n    \"#5791db\",\n    \"#98b0d6\",\n    \"#11a89a\",\n    \"#a70009\",\n    \"#ff6200\",\n    \"#fddb02\",\n    \"#f7db78\",\n    \"#b15928\",\n    \"#f9a558\",\n];\nexport var INITIAL_SELECTION_COLORS = [\n    \"#8dd3c7\",\n    \"#ffffb3\",\n    \"#bebada\",\n    \"#fb8072\",\n    \"#80b1d3\",\n    \"#fdb462\",\n    \"#b3de69\",\n    \"#fccde5\",\n    \"#d9d9d9\",\n    \"#bc80bd\",\n    \"#ccebc5\",\n    \"#ffed6f\",\n];\nexport var CLUSTERING_MAP = function (key) {\n    var _a;\n    var map = (_a = {},\n        _a[AGGLOMERATIVE_KEY] = CLUSTER_NUMBER_KEY,\n        _a[DBSCAN_KEY] = CLUSTER_DISTANCE_KEY,\n        _a[KMEANS_KEY] = CLUSTER_NUMBER_KEY,\n        _a);\n    return map[key] || CLUSTER_NUMBER_KEY;\n};\nexport var CLUSTERING_LABEL = (_a = {},\n    _a[CLUSTER_NUMBER_KEY] = \"number of clusters\",\n    _a[CLUSTER_DISTANCE_KEY] = \"distance between clusters\",\n    _a);\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/state/selection/constants.ts\n// module id = 62\n// module chunks = 1","var __assign = (this && this.__assign) || Object.assign || function(t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n        s = arguments[i];\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n            t[p] = s[p];\n    }\n    return t;\n};\nvar _a;\nimport { makeReducer } from \"../util\";\nimport { RECEIVE_CELL_LINE_DATA, RECEIVE_METADATA } from \"./constants\";\nexport var initialState = {\n    cellLineDefs: {},\n    featureData: [],\n};\nvar actionToConfigMap = (_a = {},\n    _a[RECEIVE_METADATA] = {\n        accepts: function (action) { return action.type === RECEIVE_METADATA; },\n        perform: function (state, action) { return (__assign({}, state, { featureData: action.payload })); },\n    },\n    _a[RECEIVE_CELL_LINE_DATA] = {\n        accepts: function (action) { return action.type === RECEIVE_CELL_LINE_DATA; },\n        perform: function (state, action) { return (__assign({}, state, { cellLineDefs: action.payload })); },\n    },\n    _a);\nexport default makeReducer(actionToConfigMap, initialState);\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/state/metadata/reducer.ts\n// module id = 647\n// module chunks = 1","import { CELL_ID_KEY, CELL_LINE_DEF_PROTEIN_KEY, CELL_LINE_DEF_STRUCTURE_KEY, CELL_LINE_NAME_KEY, FOV_ID_KEY, PROTEIN_NAME_KEY, } from \"../../constants/index\";\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/state/metadata/types.ts\n// module id = 648\n// module chunks = 1","import { createLogic } from \"redux-logic\";\nimport { DOWNLOAD_URL_PREFIX } from \"../../constants\";\nimport { getFileInfo } from \"../metadata/selectors\";\nimport { convertFileInfoToAICSId } from \"../util\";\nimport { DOWNLOAD_IMAGE_DATA } from \"./constants\";\nfunction createAnchorForHref(href) {\n    var anchor = document.createElement(\"a\");\n    anchor.href = href;\n    anchor.download = \"true\";\n    return anchor;\n}\nvar downloadImageData = createLogic({\n    process: function (deps) {\n        var action = deps.action, getState = deps.getState;\n        var state = getState();\n        var fileInfoArray = getFileInfo(state);\n        var fileInfoData = fileInfoArray[action.payload];\n        var url = DOWNLOAD_URL_PREFIX + \"&id=\" + convertFileInfoToAICSId(fileInfoData);\n        var anchor = createAnchorForHref(url);\n        anchor.click();\n    },\n    type: DOWNLOAD_IMAGE_DATA,\n});\nexport default [\n    downloadImageData,\n];\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/state/selection/logics.ts\n// module id = 649\n// module chunks = 1","var __assign = (this && this.__assign) || Object.assign || function(t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n        s = arguments[i];\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n            t[p] = s[p];\n    }\n    return t;\n};\nvar __read = (this && this.__read) || function (o, n) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n    if (!m) return o;\n    var i = m.call(o), r, ar = [], e;\n    try {\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n    }\n    catch (error) { e = { error: error }; }\n    finally {\n        try {\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\n        }\n        finally { if (e) throw e.error; }\n    }\n    return ar;\n};\nvar __spread = (this && this.__spread) || function () {\n    for (var ar = [], i = 0; i < arguments.length; i++) ar = ar.concat(__read(arguments[i]));\n    return ar;\n};\nvar _a;\nimport filter from \"lodash/filter\";\nimport pickBy from \"lodash/pickBy\";\nimport { KMEANS_KEY } from \"../../constants\";\nimport { makeReducer } from \"../util\";\nimport { CHANGE_AXIS, CHANGE_CLUSTER_NUMBER, CHANGE_CLUSTERING_ALGORITHM, DESELECT_ALL_POINTS, DESELECT_GROUP_OF_POINTS, DESELECT_POINT, INITIAL_COLOR_BY, INITIAL_COLORS, INITIAL_PLOT_BY_ON_X, INITIAL_PLOT_BY_ON_Y, INITIAL_SELECTION_COLORS, OPEN_CELL_IN_3D, SELECT_DOWNLOAD_ID, SELECT_GROUP, SELECT_POINT, TOGGLE_APPLY_SELECTION_SET_COLOR, TOGGLE_CLUSTERS_VISIBLE, TOGGLE_FILTER_BY_PROTEIN_NAME, } from \"./constants\";\nexport var initialState = {\n    applySelectionSetColoring: true,\n    cellSelectedFor3D: null,\n    clusteringAlgorithm: KMEANS_KEY,\n    clusteringDistance: \"\",\n    colorBy: INITIAL_COLOR_BY,\n    downloadConfig: {\n        key: \"\",\n        type: \"\",\n    },\n    filterExclude: [],\n    numberOfClusters: \"\",\n    plotByOnX: INITIAL_PLOT_BY_ON_X,\n    plotByOnY: INITIAL_PLOT_BY_ON_Y,\n    proteinColors: INITIAL_COLORS,\n    selectedGroupColors: {},\n    selectedGroups: {},\n    selectedPoints: [],\n    showClusters: false,\n};\nvar actionToConfigMap = (_a = {},\n    _a[CHANGE_AXIS] = {\n        accepts: function (action) { return action.type === CHANGE_AXIS; },\n        perform: function (state, action) {\n            var _a;\n            return (__assign({}, state, (_a = {}, _a[action.axisId] = action.payload, _a)));\n        },\n    },\n    _a[OPEN_CELL_IN_3D] = {\n        accepts: function (action) { return action.type === OPEN_CELL_IN_3D; },\n        perform: function (state, action) { return (__assign({}, state, { cellSelectedFor3D: action.payload })); },\n    },\n    _a[SELECT_GROUP] = {\n        accepts: function (action) { return action.type === SELECT_GROUP; },\n        perform: function (state, action) {\n            var _a, _b;\n            return (__assign({}, state, { selectedGroupColors: __assign({}, state.selectedGroupColors, (_a = {}, _a[action.key] = INITIAL_SELECTION_COLORS.splice(0, 1)[0], _a)), selectedGroups: __assign({}, state.selectedGroups, (_b = {}, _b[action.key] = action.payload, _b)) }));\n        },\n    },\n    _a[DESELECT_GROUP_OF_POINTS] = {\n        accepts: function (action) { return action.type === DESELECT_GROUP_OF_POINTS; },\n        perform: function (state, action) { return (__assign({}, state, { selectedGroupColors: pickBy(state.selectedGroupColors, function (value, key) { return key.toString() !== action.payload.toString(); }), selectedGroups: pickBy(state.selectedGroups, function (value, key) { return key.toString() !== action.payload.toString(); }) })); },\n    },\n    _a[DESELECT_POINT] = {\n        accepts: function (action) { return action.type === DESELECT_POINT; },\n        perform: function (state, action) { return (__assign({}, state, { selectedPoints: filter(state.selectedPoints, function (e) { return e !== action.payload; }) })); },\n    },\n    _a[SELECT_POINT] = {\n        accepts: function (action) { return action.type === SELECT_POINT; },\n        perform: function (state, action) { return (__assign({}, state, { selectedPoints: __spread(state.selectedPoints, [action.payload]) })); },\n    },\n    _a[DESELECT_ALL_POINTS] = {\n        accepts: function (action) { return action.type === DESELECT_ALL_POINTS; },\n        perform: function (state, action) { return (__assign({}, state, { selectedPoints: __spread(initialState.selectedPoints) })); },\n    },\n    _a[TOGGLE_FILTER_BY_PROTEIN_NAME] = {\n        accepts: function (action) { return action.type === TOGGLE_FILTER_BY_PROTEIN_NAME; },\n        perform: function (state, action) { return (__assign({}, state, { filterExclude: action.payload })); },\n    },\n    _a[TOGGLE_APPLY_SELECTION_SET_COLOR] = {\n        accepts: function (action) {\n            return action.type === TOGGLE_APPLY_SELECTION_SET_COLOR;\n        },\n        perform: function (state, action) { return (__assign({}, state, { applySelectionSetColoring: action.payload })); },\n    },\n    _a[CHANGE_CLUSTERING_ALGORITHM] = {\n        accepts: function (action) { return action.type === CHANGE_CLUSTERING_ALGORITHM; },\n        perform: function (state, action) { return (__assign({}, state, { clusteringAlgorithm: action.payload })); },\n    },\n    _a[CHANGE_CLUSTER_NUMBER] = {\n        accepts: function (action) { return action.type === CHANGE_CLUSTER_NUMBER; },\n        perform: function (state, action) {\n            var _a;\n            return (__assign({}, state, (_a = {}, _a[action.clusteringKey] = action.payload, _a)));\n        },\n    },\n    _a[TOGGLE_CLUSTERS_VISIBLE] = {\n        accepts: function (action) { return action.type === TOGGLE_CLUSTERS_VISIBLE; },\n        perform: function (state, action) { return (__assign({}, state, { showClusters: action.payload })); },\n    },\n    _a[SELECT_DOWNLOAD_ID] = {\n        accepts: function (action) { return action.type === SELECT_DOWNLOAD_ID; },\n        perform: function (state, action) { return (__assign({}, state, { downloadConfig: action.payload })); },\n    },\n    _a);\nexport default makeReducer(actionToConfigMap, initialState);\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/state/selection/reducer.ts\n// module id = 650\n// module chunks = 1","import map from \"lodash/map\";\nimport React from \"react\";\nimport InteractiveRow from \"../InteractiveRow\";\nvar BarChart = function (props) {\n    var closeable = props.closeable, downloadUrls = props.downloadUrls, handleCloseSelectionSet = props.handleCloseSelectionSet, handleDownload = props.handleDownload, downloadConfig = props.downloadConfig, hideable = props.hideable, onBarClicked = props.onBarClicked, panelData = props.panelData;\n    return (React.createElement(React.Fragment, null, map(panelData, function (item) {\n        return (React.createElement(InteractiveRow, { key: item.name, closeable: closeable, checked: item.checked, hideable: hideable, color: item.color, name: item.name, total: item.total, id: item.id, onBarClicked: onBarClicked, handleClose: handleCloseSelectionSet, handleDownload: handleDownload, downloadUrls: downloadUrls, downloadConfig: downloadConfig }));\n    })));\n};\nexport default BarChart;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/BarChart/index.tsx\n// module id = 662\n// module chunks = 1","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport Badge from \"antd/es/badge\";\nimport \"antd/es/badge/style/index.js\";\nimport Button from \"antd/es/button\";\nimport \"antd/es/button/style/index.js\";\nimport Checkbox from \"antd/es/checkbox\";\nimport \"antd/es/checkbox/style/index.js\";\nimport React from \"react\";\nimport DownloadDropDownMenu from \"../DownloadDropDownMenu\";\nvar styles = require(\"./style.css\");\nvar InteractiveRow = /** @class */ (function (_super) {\n    __extends(InteractiveRow, _super);\n    function InteractiveRow(props) {\n        var _this = _super.call(this, props) || this;\n        _this.onClose = _this.onClose.bind(_this);\n        return _this;\n    }\n    InteractiveRow.prototype.onClose = function (_a) {\n        var currentTarget = _a.currentTarget;\n        var handleClose = this.props.handleClose;\n        if (currentTarget && currentTarget.id && handleClose) {\n            handleClose(currentTarget.id);\n        }\n    };\n    InteractiveRow.prototype.render = function () {\n        var _a = this.props, closeable = _a.closeable, hideable = _a.hideable, id = _a.id, color = _a.color, name = _a.name, total = _a.total, onBarClicked = _a.onBarClicked, checked = _a.checked, downloadUrls = _a.downloadUrls, downloadConfig = _a.downloadConfig, handleDownload = _a.handleDownload;\n        return (React.createElement(\"div\", { className: styles.container },\n            React.createElement(\"div\", { className: styles.firstColumn },\n                hideable &&\n                    React.createElement(Checkbox, { onChange: onBarClicked, value: id, defaultChecked: true, checked: checked }),\n                React.createElement(Badge, { style: {\n                        backgroundColor: color,\n                        padding: 4,\n                    }, dot: true }),\n                React.createElement(\"span\", { className: styles.label }, name)),\n            React.createElement(\"div\", null,\n                React.createElement(\"span\", { className: styles.label }, total),\n                React.createElement(DownloadDropDownMenu, { color: color, id: id, name: name, total: total, downloadConfig: downloadConfig, downloadUrls: downloadUrls, handleDownload: handleDownload }),\n                closeable &&\n                    React.createElement(Button, { icon: \"close\", size: \"small\", id: id, ghost: true, onClick: this.onClose }))));\n    };\n    InteractiveRow.defaultProps = {\n        closeable: false,\n        downloadUrls: [],\n        hideable: true,\n    };\n    return InteractiveRow;\n}(React.Component));\nexport default InteractiveRow;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/InteractiveRow/index.tsx\n// module id = 663\n// module chunks = 1","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __assign = (this && this.__assign) || Object.assign || function(t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n        s = arguments[i];\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n            t[p] = s[p];\n    }\n    return t;\n};\nvar __read = (this && this.__read) || function (o, n) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n    if (!m) return o;\n    var i = m.call(o), r, ar = [], e;\n    try {\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n    }\n    catch (error) { e = { error: error }; }\n    finally {\n        try {\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\n        }\n        finally { if (e) throw e.error; }\n    }\n    return ar;\n};\nvar __spread = (this && this.__spread) || function () {\n    for (var ar = [], i = 0; i < arguments.length; i++) ar = ar.concat(__read(arguments[i]));\n    return ar;\n};\nimport Button from \"antd/es/button\";\nimport \"antd/es/button/style/index.js\";\nimport Dropdown from \"antd/es/dropdown\";\nimport \"antd/es/dropdown/style/index.js\";\nimport Icon from \"antd/es/icon\";\nimport \"antd/es/icon/style/index.js\";\nimport Menu from \"antd/es/menu\";\nimport \"antd/es/menu/style/index.js\";\nimport includes from \"lodash/includes\";\nimport uniq from \"lodash/uniq\";\nimport React from \"react\";\nvar styles = require(\"./style.css\");\nvar LOCAL_STORAGE_KEY = \"alreadyDownloaded\";\nvar DownloadDropDownMenu = /** @class */ (function (_super) {\n    __extends(DownloadDropDownMenu, _super);\n    function DownloadDropDownMenu(props) {\n        var _this = _super.call(this, props) || this;\n        _this.onClose = _this.onClose.bind(_this);\n        _this.onDownload = _this.onDownload.bind(_this);\n        _this.saveDownloadUrl = _this.saveDownloadUrl.bind(_this);\n        _this.handleMenuClick = _this.handleMenuClick.bind(_this);\n        _this.handleDownloadMenuVisibleChange = _this.handleDownloadMenuVisibleChange.bind(_this);\n        _this.state = {\n            alreadyDownloaded: localStorage.getItem(LOCAL_STORAGE_KEY) ?\n                JSON.parse(localStorage.getItem(LOCAL_STORAGE_KEY)) : {},\n            downloadMenuVisible: false,\n        };\n        return _this;\n    }\n    DownloadDropDownMenu.prototype.onClose = function (_a) {\n        var currentTarget = _a.currentTarget;\n        var handleClose = this.props.handleClose;\n        if (currentTarget && currentTarget.id && handleClose) {\n            handleClose(currentTarget.id);\n        }\n    };\n    DownloadDropDownMenu.prototype.onDownload = function (_a) {\n        var currentTarget = _a.currentTarget;\n        var handleDownload = this.props.handleDownload;\n        if (currentTarget && currentTarget.id && handleDownload) {\n            handleDownload(currentTarget.id);\n        }\n    };\n    DownloadDropDownMenu.prototype.saveDownloadUrl = function (clickedLink) {\n        var _a, _b;\n        var downloadConfig = this.props.downloadConfig;\n        var alreadyDownloaded = this.state.alreadyDownloaded;\n        var thisAlreadyDownloaded = alreadyDownloaded[downloadConfig.key];\n        if (thisAlreadyDownloaded) {\n            this.setState({\n                alreadyDownloaded: __assign({}, alreadyDownloaded, (_a = {}, _a[downloadConfig.key] = uniq(__spread(thisAlreadyDownloaded, [clickedLink.key])), _a)),\n            });\n        }\n        else {\n            this.setState({\n                alreadyDownloaded: __assign({}, alreadyDownloaded, (_b = {}, _b[downloadConfig.key] = [clickedLink.key], _b)),\n            });\n        }\n    };\n    DownloadDropDownMenu.prototype.handleDownloadMenuVisibleChange = function (flag) {\n        localStorage.setItem(LOCAL_STORAGE_KEY, JSON.stringify(this.state.alreadyDownloaded));\n        this.setState({ downloadMenuVisible: !!flag }); // for typescript, to convert undefined to false\n    };\n    DownloadDropDownMenu.prototype.handleMenuClick = function () {\n        var _a = this.props, downloadUrls = _a.downloadUrls, downloadConfig = _a.downloadConfig;\n        var alreadyDownloaded = this.state.alreadyDownloaded[downloadConfig.key];\n        // if they've already downloaded the set, or are clicking on the last link, close the menu\n        // otherwise leave it open to make it easy to download the set.\n        if (alreadyDownloaded && alreadyDownloaded.length === downloadUrls.length) {\n            this.setState({ downloadMenuVisible: false });\n        }\n    };\n    DownloadDropDownMenu.prototype.render = function () {\n        var _this = this;\n        var _a = this.props, id = _a.id, downloadUrls = _a.downloadUrls, downloadConfig = _a.downloadConfig;\n        var alreadyDownloaded = this.state.alreadyDownloaded[downloadConfig.key];\n        var menu = (React.createElement(Menu, { onClick: this.handleMenuClick }, downloadUrls.map(function (url, index) {\n            return (React.createElement(Menu.Item, { key: index, onClick: _this.saveDownloadUrl },\n                includes(alreadyDownloaded, index.toString()) ?\n                    React.createElement(Icon, { type: \"check\" }) : React.createElement(Icon, { type: \"download\" }),\n                React.createElement(\"a\", { href: url },\n                    \" data chunk \",\n                    index + 1,\n                    \" \")));\n        })));\n        return (React.createElement(\"div\", { className: styles.container },\n            React.createElement(Dropdown, { overlay: menu, trigger: [\"click\"], onVisibleChange: this.handleDownloadMenuVisibleChange, visible: this.state.downloadMenuVisible },\n                React.createElement(Button, { size: \"small\", className: \"ant-dropdown-link\", id: id, onClick: this.onDownload },\n                    React.createElement(Icon, { type: \"download\" })))));\n    };\n    DownloadDropDownMenu.defaultProps = {\n        closeable: false,\n        downloadUrls: [],\n        hideable: true,\n    };\n    return DownloadDropDownMenu;\n}(React.Component));\nexport default DownloadDropDownMenu;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/DownloadDropDownMenu/index.tsx\n// module id = 671\n// module chunks = 1","// removed by extract-text-webpack-plugin\nmodule.exports = {\"container\":\"style__container--1QLpn\"};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/DownloadDropDownMenu/style.css\n// module id = 721\n// module chunks = 1","// removed by extract-text-webpack-plugin\nmodule.exports = {\"container\":\"style__container--2a80r\",\"label\":\"style__label--qfuCJ\",\"first-column\":\"style__first-column--3dKE9\",\"firstColumn\":\"style__first-column--3dKE9\"};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/InteractiveRow/style.css\n// module id = 722\n// module chunks = 1","import Col from \"antd/es/col\";\nimport \"antd/es/col/style/index.js\";\nimport Row from \"antd/es/row\";\nimport \"antd/es/row/style/index.js\";\nimport Switch from \"antd/es/switch\";\nimport \"antd/es/switch/style/index.js\";\nimport React from \"react\";\nvar styles = require(\"./style.css\");\nvar ColorBySwitcher = function (props) {\n    return props.includeCol ? (React.createElement(Row, { className: styles.colorByRow, type: \"flex\", align: \"middle\" },\n        React.createElement(Col, { span: props.includeCol },\n            React.createElement(\"label\", { className: styles.label }, \"Color by:\"),\n            React.createElement(Switch, { className: styles.colorBySwitch, defaultChecked: props.defaultChecked, checkedChildren: props.checkedChildren, unCheckedChildren: props.unCheckedChildren, onChange: props.handleChange })),\n        props.children)) : (React.createElement(Row, { className: styles.colorByRow, type: \"flex\", align: \"middle\" },\n        React.createElement(\"label\", { className: styles.label }, props.label),\n        React.createElement(Switch, { className: styles.colorBySwitch, defaultChecked: props.defaultChecked, onChange: props.handleChange })));\n};\nexport default ColorBySwitcher;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/ColorBySwitcher/index.tsx\n// module id = 723\n// module chunks = 1","// removed by extract-text-webpack-plugin\nmodule.exports = {\"color-by-switch\":\"style__color-by-switch--LlTQq\",\"colorBySwitch\":\"style__color-by-switch--LlTQq\",\"color-by-row\":\"style__color-by-row--2738P\",\"colorByRow\":\"style__color-by-row--2738P\",\"label\":\"style__label--3W_cl\"};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/ColorBySwitcher/style.css\n// module id = 729\n// module chunks = 1","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport Col from \"antd/es/col\";\nimport \"antd/es/col/style/index.js\";\nimport Row from \"antd/es/row\";\nimport \"antd/es/row/style/index.js\";\nimport Slider from \"antd/es/slider\";\nimport \"antd/es/slider/style/index.js\";\nimport reduce from \"lodash/reduce\";\nimport React from \"react\";\nvar SliderWithCustomMarks = /** @class */ (function (_super) {\n    __extends(SliderWithCustomMarks, _super);\n    function SliderWithCustomMarks(props) {\n        var _this = _super.call(this, props) || this;\n        _this.onChange = function (value) {\n            var valueOptions = _this.props.valueOptions;\n            // SliderValue can be [number, number]\n            _this.setState({\n                inputValue: value,\n            });\n            _this.props.onValueChange(valueOptions[value]);\n        };\n        _this.onChange = _this.onChange.bind(_this);\n        _this.state = {\n            inputValue: props.initIndex || 0,\n        };\n        return _this;\n    }\n    SliderWithCustomMarks.prototype.componentDidUpdate = function (prevProps) {\n        var initIndex = this.props.initIndex;\n        if (prevProps.initIndex !== initIndex) {\n            this.setState({ inputValue: initIndex });\n        }\n    };\n    SliderWithCustomMarks.prototype.render = function () {\n        var inputValue = this.state.inputValue;\n        var _a = this.props, disabled = _a.disabled, label = _a.label, valueOptions = _a.valueOptions;\n        var tip = function (value) { return valueOptions[value].slice(0, 2); };\n        if (disabled) {\n            return null;\n        }\n        var accInit = {};\n        var marks = reduce(valueOptions, function (acc, cur, index) {\n            acc[index] = Math.round(Number(cur));\n            return acc;\n        }, accInit);\n        return (React.createElement(Row, null,\n            React.createElement(Col, { span: 6 },\n                React.createElement(\"span\", null, label)),\n            React.createElement(Col, { span: 14 },\n                React.createElement(Slider, { min: 0, max: valueOptions.length - 1, onChange: this.onChange, step: 1, tipFormatter: tip, value: typeof inputValue === \"number\" ? inputValue : 0, marks: marks }))));\n    };\n    return SliderWithCustomMarks;\n}(React.Component));\nexport default SliderWithCustomMarks;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/SliderWithCustomMarks/index.tsx\n// module id = 730\n// module chunks = 1","// removed by extract-text-webpack-plugin\nmodule.exports = {\"plot-by-on-x\":\"style__plot-by-on-x--2opAx\",\"plotByOnX\":\"style__plot-by-on-x--2opAx\",\"plot-by-on-y\":\"style__plot-by-on-y--2d4YU\",\"plotByOnY\":\"style__plot-by-on-y--2d4YU\"};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/containers/AxisDropDown/style.css\n// module id = 748\n// module chunks = 1","import chunk from \"lodash/chunk\";\nimport includes from \"lodash/includes\";\nimport map from \"lodash/map\";\nimport reduce from \"lodash/reduce\";\nimport values from \"lodash/values\";\nimport { createSelector } from \"reselect\";\nimport { DISABLE_COLOR, DOWNLOAD_CONFIG_TYPE_PROTEIN, DOWNLOAD_CONFIG_TYPE_SELECTION_SET, DOWNLOAD_URL_PREFIX, OFF_COLOR, PROTEIN_NAME_KEY, } from \"../../constants/index\";\nimport { getFileInfo, getProteinNames, getProteinTotals, } from \"../../state/metadata/selectors\";\nimport { getApplyColorToSelections, getColorBySelection, getDownloadConfig, getFiltersToExclude, getProteinColors, getSelectedGroupKeys, getSelectedGroups, getSelectedSetTotals, getSelectionSetColors, } from \"../../state/selection/selectors\";\nimport { convertFileInfoToAICSId } from \"../../state/util\";\nexport var getCheckAllCheckboxIsIntermediate = createSelector([getFiltersToExclude, getProteinNames], function (filtersToExclude, allProteinNames) {\n    return filtersToExclude.length > 0 && filtersToExclude.length !== allProteinNames.length;\n});\nvar getColors = createSelector([getColorBySelection, getProteinColors, getProteinNames, getFiltersToExclude], function (colorBy, proteinColors, proteinNames, filtersToExclude) {\n    return colorBy === PROTEIN_NAME_KEY ?\n        proteinNames\n            .map(function (ele, index) {\n            return includes(filtersToExclude, ele) ? OFF_COLOR : proteinColors[index];\n        }) :\n        proteinNames\n            .map(function (ele, index) {\n            return includes(filtersToExclude, ele) ? OFF_COLOR : DISABLE_COLOR;\n        });\n});\nexport var getInteractivePanelData = createSelector([getProteinNames, getFiltersToExclude, getProteinTotals, getColors], function (proteinNames, filtersToExclude, proteinTotals, proteinColors) {\n    return map(proteinTotals, function (total, index) {\n        return {\n            checked: !includes(filtersToExclude, proteinNames[index]),\n            color: proteinColors[index],\n            id: proteinNames[index],\n            name: proteinNames[index],\n            total: total,\n        };\n    });\n});\nexport var getSelectionPanelData = createSelector([getApplyColorToSelections, getSelectionSetColors, getSelectedGroupKeys, getSelectedSetTotals], function (applyColorToSelections, selectedSetColors, selectedSetNames, selectedSetTotals) {\n    return map(selectedSetNames, function (name, index) {\n        var color = applyColorToSelections ? values(selectedSetColors)[index] : DISABLE_COLOR;\n        var displayName = Number(name) ? index : name;\n        return {\n            color: color,\n            id: name.toString(),\n            name: displayName.toString(),\n            total: selectedSetTotals[index],\n        };\n    });\n});\nexport var getListOfCellIdsByDownloadConfig = createSelector([\n    getProteinNames,\n    getFileInfo,\n    getDownloadConfig,\n    getSelectedGroups,\n], function (proteinNames, fileInfo, downloadConfig, selectedGroups) {\n    var returnArray = [];\n    if (downloadConfig.type === DOWNLOAD_CONFIG_TYPE_PROTEIN) {\n        return reduce(fileInfo, function (acc, cur) {\n            if (cur[PROTEIN_NAME_KEY] === downloadConfig.key) {\n                acc.push(convertFileInfoToAICSId(cur));\n            }\n            return acc;\n        }, returnArray);\n    }\n    else if (downloadConfig.type === DOWNLOAD_CONFIG_TYPE_SELECTION_SET) {\n        var selectedIndices_1 = selectedGroups[downloadConfig.key];\n        return reduce(fileInfo, function (acc, cur, index) {\n            if (includes(selectedIndices_1, index)) {\n                acc.push(convertFileInfoToAICSId(cur));\n            }\n            return acc;\n        }, returnArray);\n    }\n    return returnArray;\n});\nexport var createUrlFromListOfIds = createSelector([getListOfCellIdsByDownloadConfig], function (cellIdsToDownload) {\n    var chunkSize = 340;\n    var chunksOfIds = chunk(cellIdsToDownload, chunkSize);\n    return map(chunksOfIds, function (listOfIds) { return (\"\" + DOWNLOAD_URL_PREFIX + map(listOfIds, function (cellId) { return \"&id=\" + cellId; }).join(\"\")); });\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/containers/ColorByMenu/selectors.ts\n// module id = 749\n// module chunks = 1","import filter from \"lodash/filter\";\nimport keys from \"lodash/keys\";\nimport map from \"lodash/map\";\nimport reduce from \"lodash/reduce\";\nimport uniq from \"lodash/uniq\";\nimport values from \"lodash/values\";\nimport { createSelector } from \"reselect\";\nimport { PROTEIN_NAME_KEY, } from \"../../constants\";\n// BASIC SELECTORS\nexport var getFullMetaDataArray = function (state) { return state.metadata.featureData; };\nexport var getFullCellLineDefs = function (state) { return state.metadata.cellLineDefs; };\nexport var getFileInfo = createSelector([getFullMetaDataArray], function (fullMetaData) {\n    return map(fullMetaData, \"file_info\");\n});\nexport var getMeasuredData = createSelector([getFullMetaDataArray], function (fullMetaData) {\n    return map(fullMetaData, \"measured_features\");\n});\nexport var getClusterData = createSelector([getFullMetaDataArray], function (fullMetaData) {\n    return map(fullMetaData, \"clusters\");\n});\nexport var getFeatureNames = createSelector([getMeasuredData], function (measuredFeatures) { return (keys(measuredFeatures[0])); });\nexport var getProteinLabels = createSelector([getFileInfo], function (fullMetaData) {\n    return map(fullMetaData, PROTEIN_NAME_KEY);\n});\nexport var getProteinNames = createSelector([getFileInfo], function (fileInfo) {\n    return uniq(map((fileInfo), PROTEIN_NAME_KEY)).sort(function (a, b) {\n        if (b > a) {\n            return -1;\n        }\n        else if (a > b) {\n            return 1;\n        }\n        return 0;\n    });\n});\nexport var getProteinTotals = createSelector([getFileInfo, getProteinNames], function (featureData, proteinNames) {\n    var totals = reduce(featureData, function (acc, cur) {\n        var index = proteinNames.indexOf(cur[PROTEIN_NAME_KEY]);\n        if (acc[index]) {\n            acc[index]++;\n        }\n        else {\n            acc[index] = 1;\n        }\n        return acc;\n    }, {});\n    return values(totals);\n});\nexport var getClusterNames = createSelector([getClusterData], function (clusterData) { return (keys(clusterData[0])); });\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/state/metadata/selectors.ts\n// module id = 75\n// module chunks = 1","// removed by extract-text-webpack-plugin\nmodule.exports = {\"color-by-row\":\"style__color-by-row--3RQTv\",\"colorByRow\":\"style__color-by-row--3RQTv\",\"bar-chart-header\":\"style__bar-chart-header--2oblB\",\"barChartHeader\":\"style__bar-chart-header--2oblB\"};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/containers/ColorByMenu/style.css\n// module id = 753\n// module chunks = 1","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport filter from \"lodash/filter\";\nimport includes from \"lodash/includes\";\nimport map from \"lodash/map\";\nimport * as React from \"react\";\nimport { connect, } from \"react-redux\";\nimport MainPlot from \"../../components/MainPlot\";\nimport { SCATTER_PLOT_NAME, X_AXIS_ID, Y_AXIS_ID, } from \"../../constants\";\nimport metadataStateBranch from \"../../state/metadata\";\nimport selectionStateBranch from \"../../state/selection\";\nimport AxisDropDown from \"../AxisDropDown\";\nimport { getScatterPlotDataArray } from \"./selectors\";\nvar styles = require(\"./style.css\");\nvar MainPlotContainer = /** @class */ (function (_super) {\n    __extends(MainPlotContainer, _super);\n    function MainPlotContainer(props) {\n        var _this = _super.call(this, props) || this;\n        _this.onPointClicked = _this.onPointClicked.bind(_this);\n        _this.onGroupSelected = _this.onGroupSelected.bind(_this);\n        return _this;\n    }\n    MainPlotContainer.prototype.componentWillMount = function () {\n        this.props.requestCellLineData();\n    };\n    MainPlotContainer.prototype.onPointClicked = function (clicked) {\n        var points = clicked.points;\n        var _a = this.props, clickedPoints = _a.clickedPoints, handleSelectPoint = _a.handleSelectPoint, handleDeselectPoint = _a.handleDeselectPoint;\n        points.forEach(function (point) {\n            if (point.data.name === SCATTER_PLOT_NAME) {\n                if (includes(clickedPoints, point.pointIndex)) {\n                    handleDeselectPoint(point.pointIndex);\n                }\n                else {\n                    handleSelectPoint(point.pointIndex);\n                }\n            }\n        });\n    };\n    MainPlotContainer.prototype.onGroupSelected = function (eventData) {\n        var points = eventData.points;\n        var _a = this.props, handleSelectGroupOfPoints = _a.handleSelectGroupOfPoints, handleSelectionToolUsed = _a.handleSelectionToolUsed;\n        var key = Date.now().valueOf().toString();\n        var payload = map(filter(points, function (ele) { return ele.data.name === SCATTER_PLOT_NAME; }), \"pointIndex\");\n        handleSelectGroupOfPoints(key, payload);\n        handleSelectionToolUsed();\n    };\n    MainPlotContainer.prototype.render = function () {\n        var _a = this.props, annotations = _a.annotations, plotDataArray = _a.plotDataArray;\n        if (plotDataArray.length === 0) {\n            return null;\n        }\n        return (React.createElement(\"div\", { id: \"main-plot\", className: styles.container },\n            React.createElement(AxisDropDown, { axisId: X_AXIS_ID }),\n            React.createElement(AxisDropDown, { axisId: Y_AXIS_ID }),\n            React.createElement(MainPlot, { plotDataArray: plotDataArray, onPointClicked: this.onPointClicked, annotations: annotations, onGroupSelected: this.onGroupSelected })));\n    };\n    return MainPlotContainer;\n}(React.Component));\nfunction mapStateToProps(state) {\n    return {\n        annotations: selectionStateBranch.selectors.getAnnotations(state),\n        clickedPoints: selectionStateBranch.selectors.getClickedScatterPoints(state),\n        plotDataArray: getScatterPlotDataArray(state),\n    };\n}\nvar dispatchToPropsMap = {\n    handleDeselectPoint: selectionStateBranch.actions.deselectPoint,\n    handleSelectGroupOfPoints: selectionStateBranch.actions.selectGroupOfPoints,\n    handleSelectPoint: selectionStateBranch.actions.selectPoint,\n    requestCellLineData: metadataStateBranch.actions.requestCellLineData,\n    requestFeatureData: metadataStateBranch.actions.requestFeatureData,\n};\nexport default connect(mapStateToProps, dispatchToPropsMap)(MainPlotContainer);\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/containers/MainPlotContainer/index.tsx\n// module id = 754\n// module chunks = 1","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __assign = (this && this.__assign) || Object.assign || function(t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n        s = arguments[i];\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n            t[p] = s[p];\n    }\n    return t;\n};\nimport React from \"react\";\nimport Plot from \"react-plotly.js\";\nimport { GENERAL_PLOT_SETTINGS, } from \"../../constants\";\nvar MainPlot = /** @class */ (function (_super) {\n    __extends(MainPlot, _super);\n    function MainPlot(props) {\n        var _this = _super.call(this, props) || this;\n        _this.makeAnnotations = _this.makeAnnotations.bind(_this);\n        _this.clickedAnnotation = _this.clickedAnnotation.bind(_this);\n        _this.state = {\n            layout: {\n                annotations: _this.makeAnnotations(),\n                autosize: true,\n                hovermode: \"closest\",\n                legend: GENERAL_PLOT_SETTINGS.legend,\n                margin: {\n                    b: 30,\n                    r: 20,\n                    t: 10,\n                },\n                paper_bgcolor: GENERAL_PLOT_SETTINGS.backgroundColor,\n                plot_bgcolor: GENERAL_PLOT_SETTINGS.backgroundColor,\n                xaxis: MainPlot.makeAxis([0, 0.85], \".1f\", false),\n                xaxis2: MainPlot.makeAxis([0.86, 1], \"f\", true),\n                yaxis: MainPlot.makeAxis([0, 0.85], \".1f\", false),\n                yaxis2: MainPlot.makeAxis([0.86, 1], \"f\", true),\n            },\n            showFullAnnotation: true,\n        };\n        return _this;\n    }\n    MainPlot.makeAxis = function (domain, hoverformat, zeroline) {\n        return {\n            color: GENERAL_PLOT_SETTINGS.textColor,\n            domain: domain,\n            hoverformat: hoverformat,\n            linecolor: GENERAL_PLOT_SETTINGS.textColor,\n            showgrid: false,\n            tickcolor: GENERAL_PLOT_SETTINGS.textColor,\n            zeroline: zeroline,\n        };\n    };\n    MainPlot.prototype.componentDidUpdate = function (prevProps) {\n        if (prevProps.annotations.length !== this.props.annotations.length) {\n            this.setState({ layout: __assign({}, this.state.layout, { annotations: this.makeAnnotations() }) });\n        }\n    };\n    MainPlot.prototype.clickedAnnotation = function () {\n        this.setState({ showFullAnnotation: false });\n    };\n    MainPlot.prototype.makeAnnotations = function () {\n        var _this = this;\n        var annotations = this.props.annotations;\n        return annotations.map(function (point, index) {\n            var lastOne = index + 1 === annotations.length;\n            var show = lastOne && _this.state.showFullAnnotation;\n            return {\n                arrowcolor: \"#fff\",\n                arrowhead: 6,\n                ax: 0,\n                ay: show ? -80 : 0,\n                bgcolor: \"#a4a2a45c\",\n                bordercolor: \"#fff\",\n                borderpad: show ? 4 : 0,\n                borderwidth: 1,\n                captureevents: true,\n                cellID: point.cellID,\n                cellLine: point.cellLine,\n                font: {\n                    color: \"#ffffff\",\n                    family: \"tahoma, arial, verdana, sans-serif\",\n                    size: 11,\n                },\n                fovID: point.fovID,\n                pointIndex: point.pointIndex,\n                // TODO full AICS cell name?\n                text: show ? \"Cell \" + point.cellID + \"<br><i>click \\\"3D\\\" button in gallery to load in 3D</i>\" : \"\",\n                x: point.x,\n                y: point.y,\n            };\n        });\n    };\n    MainPlot.prototype.render = function () {\n        var _a = this.props, onPointClicked = _a.onPointClicked, onGroupSelected = _a.onGroupSelected, plotDataArray = _a.plotDataArray;\n        var options = {\n            displayModeBar: true,\n            displaylogo: false,\n            modeBarButtonsToRemove: [\n                // literal typing to avoid a widened type inferred\n                \"sendDataToCloud\",\n                \"toImage\",\n                \"resetScale2d\",\n                \"hoverClosestCartesian\",\n                \"hoverCompareCartesian\",\n                \"toggleSpikelines\",\n            ],\n        };\n        return (React.createElement(Plot, { data: plotDataArray, useResizeHandler: true, layout: this.state.layout, config: options, onClick: onPointClicked, onClickAnnotation: this.clickedAnnotation, onSelected: onGroupSelected }));\n    };\n    return MainPlot;\n}(React.Component));\nexport default MainPlot;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/MainPlot/index.tsx\n// module id = 755\n// module chunks = 1","var __assign = (this && this.__assign) || Object.assign || function(t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n        s = arguments[i];\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n            t[p] = s[p];\n    }\n    return t;\n};\nimport map from \"lodash/map\";\nimport { createSelector } from \"reselect\";\nimport { CLUSTERS_PLOT_NAME, GENERAL_PLOT_SETTINGS, SCATTER_PLOT_NAME, SELECTIONS_PLOT_NAME, } from \"../../constants\";\nimport { getApplyColorToSelections, getClusteringResult, getClustersOn, getMainPlotData, getSelectedGroupsData } from \"../../state/selection/selectors\";\nfunction isGrouped(plotData) {\n    return plotData.groupBy === true;\n}\nexport var composePlotlyData = createSelector([\n    getMainPlotData,\n    getApplyColorToSelections,\n    getClustersOn,\n    getSelectedGroupsData,\n    getClusteringResult,\n], function (mainPlotDataValues, applyColorToSelections, showClusters, selectedGroups, clusteringResultData) {\n    var mainPlotData = __assign({}, mainPlotDataValues, { groupSettings: isGrouped(mainPlotDataValues) ? __assign({}, mainPlotDataValues.groupSettings) : null, plotName: SCATTER_PLOT_NAME });\n    var selectedGroupPlotData = applyColorToSelections ? __assign({}, selectedGroups, { groupBy: false, plotName: SELECTIONS_PLOT_NAME }) : null;\n    var clusteringPlotData = showClusters ? __assign({}, clusteringResultData, { groupBy: false, plotName: CLUSTERS_PLOT_NAME }) : null;\n    return {\n        clusteringPlotData: clusteringPlotData,\n        mainPlotData: mainPlotData,\n        selectedGroupPlotData: selectedGroupPlotData,\n    };\n});\nfunction colorSettings(plotSettings, plotData) {\n    if (isGrouped(plotData)) {\n        return __assign({}, plotSettings, { transforms: [{\n                    groups: plotData.groups,\n                    nameformat: \"%{group}\",\n                    styles: map(plotData.groupSettings, function (ele, index) {\n                        return {\n                            target: ele.name,\n                            value: {\n                                marker: {\n                                    color: ele.color,\n                                    opacity: ele.opacity,\n                                }\n                            },\n                        };\n                    }),\n                    // literal typing to avoid a widened type inferred\n                    type: \"groupby\",\n                },\n            ] });\n    }\n    return __assign({}, plotSettings, { marker: __assign({}, plotSettings.marker, { color: plotData.color, opacity: plotData.opacity || GENERAL_PLOT_SETTINGS.unselectedCircleOpacity }) });\n}\nfunction makeScatterPlotData(plotData) {\n    var plotSettings = {\n        marker: {\n            size: GENERAL_PLOT_SETTINGS.circleRadius,\n            symbol: \"circle\",\n        },\n        // literal typing to avoid a widened type inferred\n        mode: \"markers\",\n        name: plotData.plotName,\n        showlegend: false,\n        // literal typing to avoid a widened type inferred\n        type: \"scattergl\",\n        x: plotData.x,\n        y: plotData.y,\n        z: [],\n    };\n    return colorSettings(plotSettings, plotData);\n}\nfunction makeHistogramPlotX(data) {\n    return {\n        marker: {\n            color: GENERAL_PLOT_SETTINGS.histogramColor,\n            line: {\n                color: GENERAL_PLOT_SETTINGS.textColor,\n                width: 1,\n            },\n        },\n        name: \"x histogram\",\n        nbinsx: 60,\n        showlegend: false,\n        // literal typing to avoid a widened type inferred\n        type: \"histogram\",\n        x: data,\n        yaxis: \"y2\",\n    };\n}\nfunction makeHistogramPlotY(data) {\n    return {\n        marker: {\n            color: GENERAL_PLOT_SETTINGS.histogramColor,\n            line: {\n                color: GENERAL_PLOT_SETTINGS.textColor,\n                width: 1,\n            },\n        },\n        name: \"y histogram\",\n        nbinsy: 60,\n        showlegend: false,\n        // literal typing to avoid a widened type inferred\n        type: \"histogram\",\n        xaxis: \"x2\",\n        y: data,\n    };\n}\nexport var getScatterPlotDataArray = createSelector([composePlotlyData], function (allPlotData) {\n    var mainPlotData = allPlotData.mainPlotData, selectedGroupPlotData = allPlotData.selectedGroupPlotData, clusteringPlotData = allPlotData.clusteringPlotData;\n    var data = [\n        makeHistogramPlotX(mainPlotData.x),\n        makeHistogramPlotY(mainPlotData.y),\n        makeScatterPlotData(mainPlotData),\n    ];\n    if (clusteringPlotData) {\n        data.push(makeScatterPlotData(clusteringPlotData));\n    }\n    if (selectedGroupPlotData) {\n        data.push(makeScatterPlotData(selectedGroupPlotData));\n    }\n    return data;\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/containers/MainPlotContainer/selectors.ts\n// module id = 759\n// module chunks = 1","// removed by extract-text-webpack-plugin\nmodule.exports = {\"container\":\"style__container--3YOZp\"};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/containers/MainPlotContainer/style.css\n// module id = 760\n// module chunks = 1","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport Button from \"antd/es/button\";\nimport \"antd/es/button/style/index.js\";\nimport Icon from \"antd/es/icon\";\nimport \"antd/es/icon/style/index.js\";\nimport List from \"antd/es/list\";\nimport \"antd/es/list/style/index.js\";\nimport * as React from \"react\";\nimport { connect } from \"react-redux\";\nimport GalleryCard from \"../../components/GalleryCard\";\nimport { clearAllSelectedPoints, deselectPoint, downloadImage, selectCellFor3DViewer, } from \"../../state/selection/actions\";\nimport { getThumbnails } from \"../../state/selection/selectors\";\nvar styles = require(\"./style.css\");\nvar ThumbnailGallery = /** @class */ (function (_super) {\n    __extends(ThumbnailGallery, _super);\n    function ThumbnailGallery(props) {\n        var _this = _super.call(this, props) || this;\n        _this.renderGalleryCard = _this.renderGalleryCard.bind(_this);\n        return _this;\n    }\n    ThumbnailGallery.prototype.render = function () {\n        var _a = this.props, data = _a.data, handleClearAllSelectedPoints = _a.handleClearAllSelectedPoints;\n        return (React.createElement(\"div\", { id: \"gallery\" },\n            React.createElement(\"section\", { className: styles.galleryHeader },\n                React.createElement(\"h3\", null,\n                    React.createElement(Icon, { type: \"picture\" }),\n                    \" Thumbnail gallery\"),\n                data.length > 0 ?\n                    React.createElement(Button, { type: \"primary\", icon: \"close\", onClick: handleClearAllSelectedPoints }, \"Clear All\") : React.createElement(\"h4\", null, \"Clicked points on the plot will appear in this section\")),\n            React.createElement(List, { grid: { gutter: 8, xs: 1, sm: 2, md: 4, lg: 6, xl: 12 }, dataSource: data.length > 0 ? data : [{ empty: true }], renderItem: this.renderGalleryCard })));\n    };\n    ThumbnailGallery.prototype.renderGalleryCard = function (item) {\n        var _a = this.props, handleDeselectPoint = _a.handleDeselectPoint, handleDownloadImage = _a.handleDownloadImage, handleOpenIn3D = _a.handleOpenIn3D;\n        return (React.createElement(List.Item, null,\n            React.createElement(GalleryCard, { empty: item.empty, title: item.cellID, src: item.src, pointIndex: item.pointIndex, handleDeselectPoint: handleDeselectPoint, handleOpenIn3D: handleOpenIn3D, handleDownloadImage: handleDownloadImage })));\n    };\n    return ThumbnailGallery;\n}(React.Component));\nfunction mapStateToProps(state) {\n    return {\n        data: getThumbnails(state),\n    };\n}\nvar dispatchToPropsMap = {\n    handleClearAllSelectedPoints: clearAllSelectedPoints,\n    handleDeselectPoint: deselectPoint,\n    handleDownloadImage: downloadImage,\n    handleOpenIn3D: selectCellFor3DViewer,\n};\nexport default connect(mapStateToProps, dispatchToPropsMap)(ThumbnailGallery);\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/containers/ThumbnailGallery/index.tsx\n// module id = 761\n// module chunks = 1","import Card from \"antd/es/card\";\nimport \"antd/es/card/style/index.js\";\nimport Icon from \"antd/es/icon\";\nimport \"antd/es/icon/style/index.js\";\nimport React from \"react\";\nimport { THUMBNAIL_BASE_URL } from \"../../constants\";\nvar Meta = Card.Meta;\nvar styles = require(\"./style.css\");\nvar GalleryCard = function (props) {\n    var deselectPoint = function () {\n        props.handleDeselectPoint(props.pointIndex);\n    };\n    var openCellin3D = function () {\n        setTimeout(window.scroll({\n            behavior: \"smooth\",\n            left: 0,\n            top: 2500,\n        }), 3000);\n        props.handleOpenIn3D(props.title);\n    };\n    var downloadData = function () {\n        props.handleDownloadImage(props.pointIndex);\n    };\n    return (React.createElement(Card, { className: styles.container, loading: props.empty, cover: props.src &&\n            (React.createElement(\"img\", { alt: \"thumbnail of microscopy image\", src: THUMBNAIL_BASE_URL + \"/\" + props.src })), actions: props.empty ? [] : [\n            React.createElement(\"span\", { key: props.title + \"-load\", onClick: openCellin3D }, \"3D\"),\n            React.createElement(Icon, { key: props.title + \"-download\", type: \"download\", onClick: downloadData }),\n            React.createElement(Icon, { key: props.title + \"-close\", type: \"close\", onClick: deselectPoint }),\n        ] },\n        React.createElement(Meta, { title: props.title })));\n};\nexport default GalleryCard;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/GalleryCard/index.tsx\n// module id = 780\n// module chunks = 1","// removed by extract-text-webpack-plugin\nmodule.exports = {\"container\":\"style__container--1umfk\"};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/GalleryCard/style.css\n// module id = 802\n// module chunks = 1","// removed by extract-text-webpack-plugin\nmodule.exports = {\"gallery-header\":\"style__gallery-header--24Z5z\",\"galleryHeader\":\"style__gallery-header--24Z5z\"};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/containers/ThumbnailGallery/style.css\n// module id = 803\n// module chunks = 1","import Anchor from \"antd/es/anchor\";\nimport \"antd/es/anchor/style/index.js\";\nimport Icon from \"antd/es/icon\";\nimport \"antd/es/icon/style/index.js\";\nimport React from \"react\";\nvar Link = Anchor.Link;\nvar AffixedNav = function () {\n    return (React.createElement(Anchor, null,\n        React.createElement(Link, { href: \"#main-plot\", title: (React.createElement(React.Fragment, null,\n                React.createElement(Icon, { type: \"dot-chart\" }),\n                React.createElement(\"span\", null, \" Plot \"))) }),\n        React.createElement(Link, { href: \"#gallery\", title: (React.createElement(React.Fragment, null,\n                React.createElement(Icon, { type: \"picture\" }),\n                React.createElement(\"span\", null, \" Gallery \"))) }),\n        React.createElement(Link, { href: \"#three-d-viewer\", title: (React.createElement(React.Fragment, null,\n                React.createElement(Icon, { type: \"sync\" }),\n                React.createElement(\"span\", null, \" 3D viewer \"))) })));\n};\nexport default AffixedNav;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/AffixedNav/index.tsx\n// module id = 804\n// module chunks = 1","// removed by extract-text-webpack-plugin\nmodule.exports = {\"color-menu\":\"style__color-menu--1I-K5\",\"colorMenu\":\"style__color-menu--1I-K5\",\"content\":\"style__content--11OH4\",\"header\":\"style__header--3rm0D\"};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/containers/App/style.css\n// module id = 811\n// module chunks = 1","var __read = (this && this.__read) || function (o, n) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n    if (!m) return o;\n    var i = m.call(o), r, ar = [], e;\n    try {\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n    }\n    catch (error) { e = { error: error }; }\n    finally {\n        try {\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\n        }\n        finally { if (e) throw e.error; }\n    }\n    return ar;\n};\nvar __spread = (this && this.__spread) || function () {\n    for (var ar = [], i = 0; i < arguments.length; i++) ar = ar.concat(__read(arguments[i]));\n    return ar;\n};\nimport axios from \"axios\";\nimport { applyMiddleware, combineReducers, createStore, } from \"redux\";\nimport { createLogicMiddleware } from \"redux-logic\";\nimport { BASE_API_URL } from \"../constants\";\nimport { enableBatching, metadata, selection, } from \"./\";\nvar reducers = {\n    metadata: metadata.reducer,\n    selection: selection.reducer,\n};\nvar logics = __spread(metadata.logics, selection.logics);\nvar reduxLogicDependencies = {\n    baseApiUrl: BASE_API_URL,\n    httpClient: axios,\n};\nexport default function createReduxStore(initialState) {\n    var logicMiddleware = createLogicMiddleware(logics, reduxLogicDependencies);\n    var middleware = applyMiddleware(logicMiddleware);\n    var rootReducer = enableBatching(combineReducers(reducers));\n    if (initialState) {\n        return createStore(rootReducer, initialState, middleware);\n    }\n    return createStore(rootReducer, middleware);\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/state/configure-store.ts\n// module id = 812\n// module chunks = 1"],"sourceRoot":""}